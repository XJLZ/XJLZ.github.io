<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>JDK脚本安装</title>
    <link href="/2020/08/11/JDK%E8%84%9A%E6%9C%AC%E5%AE%89%E8%A3%85/"/>
    <url>/2020/08/11/JDK%E8%84%9A%E6%9C%AC%E5%AE%89%E8%A3%85/</url>
    
    <content type="html"><![CDATA[<h4 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h4><pre><code class="hljs awk"><span class="hljs-comment">#!/bin/bash</span><span class="hljs-comment">#脚本与压缩包同目录</span><span class="hljs-comment">#判断是否安装有openJDK</span>yum list installed |grep -e java -e jdk<span class="hljs-keyword">if</span> [ $? -eq <span class="hljs-number">0</span> ]then        read -p <span class="hljs-string">&quot;继续执行将卸载已有JDK,y确定，其他退出?&quot;</span> choose        <span class="hljs-keyword">if</span> [ <span class="hljs-variable">$choose</span>==<span class="hljs-string">&quot;y&quot;</span> ]        then                yum -y remove java-* &amp;&gt; <span class="hljs-regexp">/dev/</span>null                yum -y remove tzdata-java* &amp;&gt; <span class="hljs-regexp">/dev/</span>null        <span class="hljs-keyword">else</span>                <span class="hljs-keyword">exit</span> <span class="hljs-number">1</span>        fifi<span class="hljs-comment">#判断安装包是否存在</span><span class="hljs-keyword">if</span> [ -f jdk-<span class="hljs-number">8</span>u261-linux-x64.tar.gz ]<span class="hljs-comment">#判断是否已经安装</span>then        java &amp;&gt; <span class="hljs-regexp">/dev/</span>null        <span class="hljs-keyword">if</span> [ $? -eq <span class="hljs-number">0</span> ]        then                echo <span class="hljs-string">&quot;已经安装JDK&quot;</span>                <span class="hljs-keyword">exit</span> <span class="hljs-number">1</span>        <span class="hljs-keyword">else</span>                echo <span class="hljs-string">&quot;开始安装JDK&quot;</span>                tar zxvf jdk-<span class="hljs-number">8</span>u261-linux-x64.tar.gz -C <span class="hljs-regexp">/usr/</span>local                echo <span class="hljs-string">&quot;JDK安装完成，开始配置环境变量&quot;</span>            cat <span class="hljs-regexp">/dev/</span>null &gt; <span class="hljs-regexp">/etc/</span>profile.d/jdkconf.sh                echo <span class="hljs-string">&#x27;export JAVA_HOME=/usr/local/jdk1.8.0_261&#x27;</span> &gt;&gt; <span class="hljs-regexp">/etc/</span>profile.d/jdkconf.sh                echo <span class="hljs-string">&#x27;export PATH=$PATH:$JAVA_HOME/bin&#x27;</span> &gt;&gt; <span class="hljs-regexp">/etc/</span>profile.d/jdkconf.sh                echo <span class="hljs-string">&#x27;export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar&#x27;</span> &gt;&gt; <span class="hljs-regexp">/etc/</span>profile.d/jdkconf.sh                echo <span class="hljs-string">&quot;环境变量配置完成&quot;</span>        fi<span class="hljs-keyword">else</span>        echo <span class="hljs-string">&quot;请将当前shell脚本和安装包放在同一目录&quot;</span>fichmod +x <span class="hljs-regexp">/etc/</span>profile.d/jdkconf.shsource <span class="hljs-regexp">/etc/</span>profile.d/jdkconf.shecho <span class="hljs-string">&quot;======JDK安装完成，请使用命令：java -version检查是否成功安装,若失败请执行source /etc/profile.d/jdkconf.sh=======&quot;</span></code></pre><h4 id="rpm包"><a href="#rpm包" class="headerlink" title="rpm包"></a>rpm包</h4><pre><code class="hljs awk"><span class="hljs-comment">#!/bin/bash</span><span class="hljs-comment">#判断是否安装有openJDK</span>yum list installed |grep -e java -e jdk<span class="hljs-keyword">if</span> [ $? -eq <span class="hljs-number">0</span> ]then        read -p <span class="hljs-string">&quot;继续执行将卸载已有JDK,y确定，其他退出?&quot;</span> choose        <span class="hljs-keyword">if</span> [ <span class="hljs-variable">$choose</span>==<span class="hljs-string">&quot;y&quot;</span> ]        then                yum -y remove java-* &amp;&gt; <span class="hljs-regexp">/dev/</span>null                yum -y remove tzdata-java* &amp;&gt; <span class="hljs-regexp">/dev/</span>null        <span class="hljs-keyword">else</span>                <span class="hljs-keyword">exit</span> <span class="hljs-number">1</span>        fifi<span class="hljs-comment">#判断安装包是否存在</span><span class="hljs-keyword">if</span> [ -f jdk-<span class="hljs-number">8</span>u261-linux-x64.rpm ]<span class="hljs-comment">#判断是否已经安装</span>then        java &amp;&gt; <span class="hljs-regexp">/dev/</span>null        <span class="hljs-keyword">if</span> [ $? -eq <span class="hljs-number">0</span> ]        then                echo <span class="hljs-string">&quot;已经安装JDK&quot;</span>                <span class="hljs-keyword">exit</span> <span class="hljs-number">1</span>        <span class="hljs-keyword">else</span>                echo <span class="hljs-string">&quot;开始安装JDK&quot;</span>                rpm -ivh jdk-<span class="hljs-number">8</span>u261-linux-x64.rpm &amp;&gt;<span class="hljs-regexp">/dev/</span>null                echo <span class="hljs-string">&quot;JDK安装完成，开始配置环境变量&quot;</span>                echo <span class="hljs-string">&#x27;export JAVA_HOME=/usr/java/jdk1.8.0_261-amd64&#x27;</span> &gt;&gt; <span class="hljs-regexp">/etc/</span>profile.d/jdkconf.sh                echo <span class="hljs-string">&#x27;export PATH=$JAVA_HOME/bin:$PATH&#x27;</span> &gt;&gt; <span class="hljs-regexp">/etc/</span>profile.d/jdkconf.sh                echo <span class="hljs-string">&#x27;export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar&#x27;</span> &gt;&gt; <span class="hljs-regexp">/etc/</span>profile.d/jdkconf.sh                echo <span class="hljs-string">&quot;环境变量配置完成&quot;</span>        fi<span class="hljs-keyword">else</span>        echo <span class="hljs-string">&quot;请将当前shell脚本和安装包放在同一目录&quot;</span>fichmod +x <span class="hljs-regexp">/etc/</span>profile.d/jdkconf.shsh <span class="hljs-regexp">/etc/</span>profile.d/jdkconf.shecho <span class="hljs-string">&quot;======JDK安装完成，请使用命令：java -version检查是否成功安装=======&quot;</span></code></pre>]]></content>
    
    
    
    <tags>
      
      <tag>Centos7</tag>
      
      <tag>JDK</tag>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Centos7 常用命令</title>
    <link href="/2020/08/10/Centos7%20%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <url>/2020/08/10/Centos7%20%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<h4 id="开端口"><a href="#开端口" class="headerlink" title="开端口"></a>开端口</h4><pre><code class="hljs routeros">【单个】firewall-cmd <span class="hljs-attribute">--zone</span>=public <span class="hljs-attribute">--add-port</span>=8082/tcp --permanent【范围】firewall-cmd <span class="hljs-attribute">--zone</span>=public <span class="hljs-attribute">--add-port</span>=50000-50100/tcp --permanent【删除】firewall-cmd <span class="hljs-attribute">--zone</span>=public <span class="hljs-attribute">--remove-port</span>=80/tcp --permanent  <span class="hljs-comment">#找出公共区域的所有设置</span>firewall-cmd <span class="hljs-attribute">--zone</span>=public --list-allfirewall-cmd --list-all</code></pre><h4 id="重启防火墙："><a href="#重启防火墙：" class="headerlink" title="重启防火墙："></a>重启防火墙：</h4><pre><code class="hljs css"><span class="hljs-selector-tag">systemctl</span> <span class="hljs-selector-tag">restart</span> <span class="hljs-selector-tag">firewalld</span><span class="hljs-selector-class">.service</span></code></pre>]]></content>
    
    
    
    <tags>
      
      <tag>Centos7</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Centos7搭建FTP</title>
    <link href="/2020/08/10/Centos7%E6%90%AD%E5%BB%BAFTP/"/>
    <url>/2020/08/10/Centos7%E6%90%AD%E5%BB%BAFTP/</url>
    
    <content type="html"><![CDATA[<h4 id="安装前准备"><a href="#安装前准备" class="headerlink" title="安装前准备"></a>安装前准备</h4><p>vsftpd是linux下的一款小巧轻快，安全易用的FTP服务器软件，是一款在各个Linux发行版中最受推崇的FTP服务器软件。</p><p>1.安装vsftpd，直接yum 安装就可以了</p><pre><code class="hljs cmake">yum <span class="hljs-keyword">install</span> -y vsftpd</code></pre><p>2.相关配置文件：</p><pre><code class="hljs awk">cd <span class="hljs-regexp">/etc/</span>vsftpd</code></pre><p>3.启动服务</p><p><code>systemctl enable vsftpd.service</code> //设置开机自启动</p><p><code>systemctl start vsftpd.service</code> //启动ftp服务</p><p><code>netstat -antup | grep ftp</code> //查看ftp服务端口</p><p>4.另外简单介绍下vsftpd.conf的配置文件参数说明。</p><pre><code class="hljs awk">cat <span class="hljs-regexp">/etc/</span>vsftpd/vsftpd.conf</code></pre>]]></content>
    
    
    
    <tags>
      
      <tag>Centos7</tag>
      
      <tag>ftp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux安装Node+Npm</title>
    <link href="/2020/08/10/Linux%E5%AE%89%E8%A3%85Node+Npm/"/>
    <url>/2020/08/10/Linux%E5%AE%89%E8%A3%85Node+Npm/</url>
    
    <content type="html"><![CDATA[<h4 id="Linux安装Node-Npm"><a href="#Linux安装Node-Npm" class="headerlink" title="Linux安装Node+Npm"></a>Linux安装Node+Npm</h4><ul><li>node官网下载node（**Linux Binaries (x64)**）安装包 <a href="https://links.jianshu.com/go?to=https://nodejs.org/zh-cn/download/">https://nodejs.org/zh-cn/download/</a></li><li>执行解压操作</li></ul><pre><code class="hljs css"><span class="hljs-selector-tag">tar</span> <span class="hljs-selector-tag">-xvf</span> <span class="hljs-selector-tag">node-v10</span><span class="hljs-selector-class">.16</span><span class="hljs-selector-class">.3-linux-x64</span><span class="hljs-selector-class">.tar</span><span class="hljs-selector-class">.xz</span> </code></pre><h5 id="确认一下nodejs下bin目录是否有node-和npm文件-如果有执行软连接，如果没有重新下载"><a href="#确认一下nodejs下bin目录是否有node-和npm文件-如果有执行软连接，如果没有重新下载" class="headerlink" title="确认一下nodejs下bin目录是否有node 和npm文件,如果有执行软连接，如果没有重新下载"></a><strong>确认一下nodejs下bin目录是否有node 和npm文件,如果有执行软连接，如果没有重新下载</strong></h5><ul><li>建立软连接，变为全局,对应自己路径</li></ul><pre><code class="hljs bash">ln -s /usr/<span class="hljs-built_in">local</span>/src/node-v10.16.3-linux-x64/bin/npm  /usr/<span class="hljs-built_in">local</span>/bin/(此处不改)ln -s /usr/<span class="hljs-built_in">local</span>/src/node-v10.16.3-linux-x64/bin/node /usr/<span class="hljs-built_in">local</span>/bin/</code></pre><ul><li>验证node是否生效</li></ul><pre><code class="hljs undefined">npm -v node -v</code></pre><h4 id="npm换源"><a href="#npm换源" class="headerlink" title="npm换源"></a>npm换源</h4><pre><code class="hljs arduino">npm <span class="hljs-built_in">config</span> <span class="hljs-built_in">set</span> registry https:<span class="hljs-comment">//registry.npm.taobao.org</span><span class="hljs-comment">// 配置后可通过下面方式来验证是否成功</span>npm <span class="hljs-built_in">config</span> <span class="hljs-built_in">get</span> registry</code></pre>]]></content>
    
    
    
    <tags>
      
      <tag>node</tag>
      
      <tag>npm</tag>
      
      <tag>linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux安装MongoDB</title>
    <link href="/2020/08/10/MongoDB/"/>
    <url>/2020/08/10/MongoDB/</url>
    
    <content type="html"><![CDATA[<h2 id="1-下载"><a href="#1-下载" class="headerlink" title="1.下载"></a>1.下载</h2><p>　　官方下载地址：<a href="https://www.mongodb.com/download-center/community">https://www.mongodb.com/download-center/community</a></p><h2 id="2-上传解压"><a href="#2-上传解压" class="headerlink" title="2.上传解压"></a>2.上传解压</h2><h3 id="1-使用工具（FileZilla）上传至服务器"><a href="#1-使用工具（FileZilla）上传至服务器" class="headerlink" title="　　1.使用工具（FileZilla）上传至服务器"></a>　　1.使用工具（FileZilla）上传至服务器</h3><p>　　<img src="https://i.loli.net/2020/08/10/1EluM4Qy2CVPpZ6.png" alt="img"></p><h3 id="2-解压安装"><a href="#2-解压安装" class="headerlink" title="　　2.解压安装"></a>　　2.解压安装</h3><pre><code class="hljs angelscript">解压：tar -zxvf mongodb-linux-x86_64<span class="hljs-number">-4.0</span><span class="hljs-number">.6</span>.tgz移动：mv ./mongodb-linux-x86_64<span class="hljs-number">-4.0</span><span class="hljs-number">.6</span> /usr/local/mongodb</code></pre><p>　　<img src="https://img2018.cnblogs.com/blog/1253415/201903/1253415-20190315144629293-243768918.png" alt="img"></p><h2 id="3-配置conf与目录"><a href="#3-配置conf与目录" class="headerlink" title="3.配置conf与目录"></a>3.配置conf与目录</h2><h3 id="1-进入mongodb目录"><a href="#1-进入mongodb目录" class="headerlink" title="　　1.进入mongodb目录　　　"></a>　　1.进入mongodb目录　　　</h3><pre><code class="hljs awk">cd <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/mongodb/</span></code></pre><p>　　　　<img src="https://img2018.cnblogs.com/blog/1253415/201903/1253415-20190315145017284-1028054786.png" alt="img"></p><h3 id="2-创建db目录和日志文件"><a href="#2-创建db目录和日志文件" class="headerlink" title="　　2.创建db目录和日志文件　　"></a>　　2.创建db目录和日志文件　　</h3><pre><code class="hljs awk">mkdir -p .<span class="hljs-regexp">/data/</span>dbmkdir -p ./logstouch .<span class="hljs-regexp">/logs/m</span>ongodb.log</code></pre><p>　　　　<img src="https://img2018.cnblogs.com/blog/1253415/201903/1253415-20190315145325509-1623167612.png" alt="img"></p><h3 id="3-创建mongodb-conf文件"><a href="#3-创建mongodb-conf文件" class="headerlink" title="　　3.创建mongodb.conf文件"></a>　　3.创建mongodb.conf文件</h3><p>　　　　<strong>vim mongodb.conf</strong></p><pre><code class="hljs ini"><span class="hljs-comment">#端口号</span><span class="hljs-attr">port</span>=<span class="hljs-number">27017</span><span class="hljs-comment">#db目录</span><span class="hljs-attr">dbpath</span>=/usr/local/mongodb/data/db<span class="hljs-comment">#日志目录</span><span class="hljs-attr">logpath</span>=//usr/local/mongodb/logs/mongodb.log<span class="hljs-comment">#后台</span><span class="hljs-attr">fork</span>=<span class="hljs-literal">true</span><span class="hljs-comment">#日志输出</span><span class="hljs-attr">logappend</span>=<span class="hljs-literal">true</span><span class="hljs-comment">#允许远程IP连接</span><span class="hljs-attr">bind_ip</span>=<span class="hljs-number">0.0</span>.<span class="hljs-number">0.0</span></code></pre><h2 id="4-启动测试"><a href="#4-启动测试" class="headerlink" title="4.启动测试"></a>4.启动测试</h2><h3 id="1-启动"><a href="#1-启动" class="headerlink" title="　　1.启动　"></a>　　1.启动　</h3><pre><code class="hljs awk">.<span class="hljs-regexp">/bin/m</span>ongod --config mongodb.conf</code></pre><p> 　<img src="https://img2018.cnblogs.com/blog/1253415/201903/1253415-20190315150104231-1845968800.png" alt="img"></p><h3 id="2-连接"><a href="#2-连接" class="headerlink" title="　　2.连接　"></a>　　2.连接　</h3><pre><code class="hljs awk">.<span class="hljs-regexp">/bin/m</span>ongo  --默认端口<span class="hljs-number">27017</span>.<span class="hljs-regexp">/bin/m</span>ongo localhost:<span class="hljs-number">23234</span>  --指定端口，需要与配置的端口号一致</code></pre><p>　　<img src="https://img2018.cnblogs.com/blog/1253415/201903/1253415-20190315150455580-93719054.png" alt="img"></p><h3 id="3-测试"><a href="#3-测试" class="headerlink" title="　　3.测试　　"></a>　　3.测试　　<img src="https://img2018.cnblogs.com/blog/1253415/201903/1253415-20190315152856246-931789177.png" alt="img"></h3><h2 id="5-配置mongodb服务开机启动"><a href="#5-配置mongodb服务开机启动" class="headerlink" title="5.配置mongodb服务开机启动"></a>5.配置mongodb服务开机启动</h2><h3 id="1-设置mongodb-service开机服务启动"><a href="#1-设置mongodb-service开机服务启动" class="headerlink" title="1.设置mongodb.service开机服务启动"></a>1.设置mongodb.service开机服务启动</h3><pre><code class="hljs routeros">cd /lib/systemd/systemvim mongodb.service添加如下配置--记得路劲和自己的配置路径要一致[Unit]<span class="hljs-attribute">Description</span>=mongodb<span class="hljs-attribute">After</span>=network.target remote-fs.target nss-lookup.target[Service]<span class="hljs-attribute">Type</span>=forking<span class="hljs-attribute">ExecStart</span>=/usr/local/mongodb/bin/mongod --config /usr/local/mongodb/mongodb.conf<span class="hljs-attribute">ExecReload</span>=/bin/kill -s HUP <span class="hljs-variable">$MAINPID</span><span class="hljs-attribute">ExecStop</span>=/usr/local/mongodb/bin/mongod --shutdown --config /usr/local/mongodb/mongodb.conf<span class="hljs-attribute">PrivateTmp</span>=<span class="hljs-literal">true</span>[Install]<span class="hljs-attribute">WantedBy</span>=multi-user.target</code></pre><p>   然后设置mongodb.service权限</p><pre><code class="hljs css"><span class="hljs-selector-tag">chmod</span> +<span class="hljs-selector-tag">x</span> <span class="hljs-selector-tag">mongodb</span><span class="hljs-selector-class">.service</span></code></pre><p>​    #启动服务 </p><pre><code class="hljs crmsh">systemctl <span class="hljs-literal">start</span> mongodb.service  </code></pre><p>   #停止服务</p><pre><code class="hljs arduino">systemctl <span class="hljs-built_in">stop</span> mongodb.service</code></pre><p>   #添加开机自启动</p><pre><code class="hljs routeros">systemctl <span class="hljs-builtin-name">enable</span> mongodb.service</code></pre><p>   #重启服务</p><pre><code class="hljs css"><span class="hljs-selector-tag">systemctl</span> <span class="hljs-selector-tag">restart</span> <span class="hljs-selector-tag">mongodb</span><span class="hljs-selector-class">.service</span></code></pre><h3 id="2）添加环境变量"><a href="#2）添加环境变量" class="headerlink" title="2）添加环境变量"></a>2）添加环境变量</h3><pre><code class="hljs routeros">1、直接用export命令：   <span class="hljs-builtin-name">export</span>  <span class="hljs-attribute">PATH</span>=<span class="hljs-variable">$PATH</span>:/usr/local/mongodb/bin2、修改profile文件：   cat &gt;&gt;/etc/profile&lt;&lt;<span class="hljs-string">&quot;EOF&quot;</span>   <span class="hljs-builtin-name">export</span> <span class="hljs-attribute">PATH</span>=<span class="hljs-string">&quot;<span class="hljs-variable">$PATH</span>:/usr/local/mongodb/bin&quot;</span>   EOF   刷新profile文件：   source /etc/profile3、 修改.bashrc文件：     cat &gt;&gt;/root/.bashrc&lt;&lt;<span class="hljs-string">&quot;EOF&quot;</span>       <span class="hljs-builtin-name">export</span> <span class="hljs-attribute">PATH</span>=<span class="hljs-string">&quot;<span class="hljs-variable">$PATH</span>:/usr/local/mongodb/bin&quot;</span>       EOF</code></pre><p>   上述三步依次执行完毕，环境变量配置完成！！！！</p><p>   重启服务器，输入mongo 回车就有了。。。。。</p>]]></content>
    
    
    
    <tags>
      
      <tag>linux</tag>
      
      <tag>mongo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Mongo常用查询</title>
    <link href="/2020/08/10/Mongo%E5%B8%B8%E7%94%A8%E6%9F%A5%E8%AF%A2/"/>
    <url>/2020/08/10/Mongo%E5%B8%B8%E7%94%A8%E6%9F%A5%E8%AF%A2/</url>
    
    <content type="html"><![CDATA[<h4 id="查询并显示集合中的数据"><a href="#查询并显示集合中的数据" class="headerlink" title="查询并显示集合中的数据"></a>查询并显示集合中的数据</h4><pre><code class="hljs javascript">db.getCollection(<span class="hljs-string">&#x27;pixiv&#x27;</span>).aggregate([    &#123; <span class="hljs-attr">$group</span>: &#123; <span class="hljs-attr">_id</span> : <span class="hljs-string">&#x27;$author.id&#x27;</span>, <span class="hljs-attr">count</span>: &#123; <span class="hljs-attr">$sum</span> : <span class="hljs-number">1</span> &#125; &#125; &#125;,    &#123; <span class="hljs-attr">$match</span>: &#123; <span class="hljs-attr">count</span>: &#123; <span class="hljs-attr">$gt</span> : <span class="hljs-number">1</span>&#125; &#125; &#125;])</code></pre><h4 id="查询条件为数据中对象某个属性值"><a href="#查询条件为数据中对象某个属性值" class="headerlink" title="查询条件为数据中对象某个属性值"></a>查询条件为数据中对象某个属性值</h4><pre><code class="hljs javascript">db.getCollection(<span class="hljs-string">&#x27;pixiv&#x27;</span>).find(&#123;<span class="hljs-string">&quot;author.id&quot;</span>:<span class="hljs-number">35562628</span>&#125;)</code></pre><h4 id="命令导出数据库"><a href="#命令导出数据库" class="headerlink" title="命令导出数据库"></a>命令导出数据库</h4><pre><code class="hljs jboss-cli"><span class="hljs-string">./mongoexport</span> -h 127.0.0.1 <span class="hljs-params">--port</span> 50003 -d Images -c picjson -o <span class="hljs-string">/home/picjson.js</span> <span class="hljs-params">--type</span> json -f <span class="hljs-string">&quot;_id,tags,pid,p,uid,title,author,url,r18,width,height,_v&quot;</span></code></pre><h4 id="命令导入数据库"><a href="#命令导入数据库" class="headerlink" title="命令导入数据库"></a>命令导入数据库</h4><pre><code class="hljs jboss-cli"><span class="hljs-string">./mongoimport</span> -h 127.0.0.1 <span class="hljs-params">--port</span> 50003 -d Pixiv -c picjson <span class="hljs-params">--file</span> <span class="hljs-string">/home/picjson.js</span> <span class="hljs-params">--type</span> json</code></pre>]]></content>
    
    
    
    <tags>
      
      <tag>mongodb</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Navicat12激活</title>
    <link href="/2020/08/10/Navicat12%E6%BF%80%E6%B4%BB/"/>
    <url>/2020/08/10/Navicat12%E6%BF%80%E6%B4%BB/</url>
    
    <content type="html"><![CDATA[<p>本教程更新时间：2019-4-19 16:37:38</p><p><a href="https://www.52pojie.cn/thread-934566-1-1.html">https://www.52pojie.cn/thread-934566-1-1.html</a></p><p>本文所需软件<br>1、navicat_premium原版安装包<br>官网下载地址：<a href="https://www.navicat.com.cn/download/navicat-premium">https://www.navicat.com.cn/download/navicat-premium</a><br>2、注册工具<br>github地址：<a href="https://github.com/DoubleLabyrinth/navicat-keygen">https://github.com/DoubleLabyrinth/navicat-keygen</a><br>以上本文所需文件已整理到网盘，自取：<br>链接：<a href="https://pan.baidu.com/s/1MDuDFBsS0EI-rz4WkQ7kJw">https://pan.baidu.com/s/1MDuDFBsS0EI-rz4WkQ7kJw</a><br>提取码：gdn5<br>复制这段内容后打开百度网盘手机App，操作更方便哦</p><p>~<del>~ 分割线</del></p><p>好了，教程开始<br><strong>1、安装原版navicat</strong><br>正常安装，一直下一步，直到安装成功，这个我就不截图了。<br>默认安装路径是：C:\Program Files\PremiumSoft\Navicat Premium 12<br><strong>2、开始激活</strong><br><strong>2.1、首先需要先替换掉Navicat激活公钥</strong><br>a、解压navicat-keygen-for-x64.zip文件，开始执行cmd命令<br>b、打开命令提示符（管理员），win+x<br>(因为我是安装在了C盘，文件写入需要管理员权限，如果安装在别的盘，普通的命令提示符就行，或者在解压文件夹按住shift点右键，也能选择命令提示符打开)</p><p><img src="https://attach.52pojie.cn/forum/201904/19/160557tm0i0zk08q0a9f99.png" alt="img"></p><p>c、进入到navicat-keygen-for-x64.zip文件的解压目录，执行如下命令</p><pre><code class="hljs latex">cd [解压目录].<span class="hljs-tag">\<span class="hljs-name">navicat</span></span>-patcher.exe &quot;C:<span class="hljs-tag">\<span class="hljs-name">Program</span></span> Files<span class="hljs-tag">\<span class="hljs-name">PremiumSoft</span></span><span class="hljs-tag">\<span class="hljs-name">Navicat</span></span> Premium 12&quot;</code></pre><p><img src="https://attach.52pojie.cn/forum/201904/19/161149zmt1zxgarvrqatj2.png" alt="img"></p><p>d、回车继续，一顿飘屏猛如虎，好的，出现这样的提示表示替换成功。成功之后会在当前文件夹下生成RegPrivateKey.pem文件</p><p><img src="https://attach.52pojie.cn/forum/201904/19/161405f9gdzno4z3d4ob5d.png" alt="img"></p><p><strong>2.2、接下来我们就要开始生成序列号和激活码</strong><br>a、和替换公钥类似，执行如下命令</p><pre><code class="hljs css">.\<span class="hljs-selector-tag">navicat-keygen</span><span class="hljs-selector-class">.exe</span> <span class="hljs-selector-tag">-text</span> .\<span class="hljs-selector-tag">RegPrivateKey</span><span class="hljs-selector-class">.pem</span></code></pre><p>b、接下来你会被要求选择Navicat产品类别、语言以及输入主版本号。之后会随机生成一个序列号。</p><p><img src="https://attach.52pojie.cn/forum/201904/19/162347wpp8fo7pktogsavt.png" alt="img"></p><p>c、得到序列号，复制下来，注意：<strong>窗口不要关闭</strong></p><p>d、此时打开安装的原版Navicat，第一次打开会出现如下提示，点击注册按钮，进入注册页面</p><p><img src="https://attach.52pojie.cn/forum/201904/19/155913jd4w4coog0sx25n5.png" alt="img"></p><p><img src="https://attach.52pojie.cn/forum/201904/19/162730x44dr8xzfg77zwbj.png" alt="img"></p><p>e、接下来输入用户名，组织名和请求码，然后回车两次，获得激活码</p><p><img src="https://attach.52pojie.cn/forum/201904/19/163431if96i5uu2610fs0s.png" alt="img"></p><p>f、把获得到的激活码粘贴到navcat中，点击激活，激活成功。</p><p><img src="https://attach.52pojie.cn/forum/201904/19/163431yrza4l445rprd888.png" alt="img"></p><p><strong>附上激活成功的截图。</strong></p><p><img src="https://attach.52pojie.cn/forum/201904/19/163432k6rbb5wdbb116pp2.png" alt="img"></p><p><img src="https://attach.52pojie.cn/forum/201904/19/164734oam0stsajsuotaja.png" alt="img"></p>]]></content>
    
    
    
    <tags>
      
      <tag>Navicat</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MySQ5.7脚本安装</title>
    <link href="/2020/08/10/Mysql5.7%E8%84%9A%E6%9C%AC%E5%AE%89%E8%A3%85/"/>
    <url>/2020/08/10/Mysql5.7%E8%84%9A%E6%9C%AC%E5%AE%89%E8%A3%85/</url>
    
    <content type="html"><![CDATA[<h4 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h4><pre><code class="hljs awk"><span class="hljs-comment">#!/bin/bash</span><span class="hljs-comment">#压缩包目录</span>data=<span class="hljs-string">&quot;home/mysql&quot;</span>echo <span class="hljs-string">&quot;将mysql压缩包解压&quot;</span>tar xvf mysql-<span class="hljs-number">5.7</span>.<span class="hljs-number">30</span>-linux-glibc2.<span class="hljs-number">12</span>-x86_64.tar.gz echo <span class="hljs-string">&quot;新建mysql文件夹&quot;</span><span class="hljs-keyword">if</span> [ ! -d <span class="hljs-string">&quot;/&quot;</span><span class="hljs-variable">$&#123;data&#125;</span><span class="hljs-string">&quot;/mysql-5.7.30-linux-glibc2.12-x86_64&quot;</span> ]; then        echo <span class="hljs-string">&quot;mysql解压未完成&quot;</span>        <span class="hljs-keyword">exit</span>fiecho <span class="hljs-string">&quot;mysql解压完成修改文件夹&quot;</span>mv mysql-<span class="hljs-number">5.7</span>.<span class="hljs-number">30</span>-linux-glibc2.<span class="hljs-number">12</span>-x86_64 mysqlmv mysql <span class="hljs-regexp">/usr/</span>localecho <span class="hljs-string">&quot;mysql解压完成&quot;</span>echo <span class="hljs-string">&quot;切换目录&quot;</span>cd <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/mysql/</span>echo <span class="hljs-string">&quot;新建数据库data目录&quot;</span>mkdir dataecho <span class="hljs-string">&quot;初始化mysql&quot;</span>cd <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/mysql/</span>bin<span class="hljs-regexp">/mysqld --initialize --user=root --basedir=/u</span>sr<span class="hljs-regexp">/local/my</span>sql --datadir=<span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/mysql/</span>dataecho <span class="hljs-string">&quot;修改配置文件&quot;</span>cat <span class="hljs-regexp">/dev/</span>null &gt; <span class="hljs-regexp">/etc/my</span>.cnf<span class="hljs-keyword">if</span> [ -f <span class="hljs-string">&quot;/etc/my.cnf&quot;</span> ]; then        mv <span class="hljs-regexp">/etc/my</span>.cnf <span class="hljs-regexp">/etc/my</span>.cnf.bakfiecho <span class="hljs-string">&#x27;[mysqld]&#x27;</span> &gt;&gt; <span class="hljs-regexp">/etc/my</span>.cnfecho <span class="hljs-string">&#x27;bind-address=0.0.0.0&#x27;</span> &gt;&gt; <span class="hljs-regexp">/etc/my</span>.cnfecho <span class="hljs-string">&#x27;basedir = /usr/local/mysql&#x27;</span> &gt;&gt; <span class="hljs-regexp">/etc/my</span>.cnfecho <span class="hljs-string">&#x27;datadir = /usr/local/mysql/data&#x27;</span> &gt;&gt; <span class="hljs-regexp">/etc/my</span>.cnfecho <span class="hljs-string">&#x27;socket=/tmp/mysql.sock&#x27;</span> &gt;&gt; <span class="hljs-regexp">/etc/my</span>.cnfecho <span class="hljs-string">&#x27;user=root&#x27;</span> &gt;&gt; <span class="hljs-regexp">/etc/my</span>.cnfecho <span class="hljs-string">&#x27;port=3306&#x27;</span> &gt;&gt; <span class="hljs-regexp">/etc/my</span>.cnfecho <span class="hljs-string">&#x27;character-set-server=utf8&#x27;</span> &gt;&gt; <span class="hljs-regexp">/etc/my</span>.cnf<span class="hljs-comment">#echo &#x27;skip-grant-tables&#x27; &gt;&gt; /etc/my.cnf</span>echo <span class="hljs-string">&#x27;# Disabling symbolic-links is recommended to prevent assorted security risks&#x27;</span> &gt;&gt; <span class="hljs-regexp">/etc/my</span>.cnfecho <span class="hljs-string">&#x27;symbolic-links=0&#x27;</span> &gt;&gt; <span class="hljs-regexp">/etc/my</span>.cnfecho <span class="hljs-string">&#x27;# skip-grant-tables&#x27;</span> &gt;&gt; <span class="hljs-regexp">/etc/my</span>.cnfecho <span class="hljs-string">&#x27;[mysqld_safe]&#x27;</span> &gt;&gt; <span class="hljs-regexp">/etc/my</span>.cnfecho <span class="hljs-string">&#x27;log-error=/var/log/mysqld.log&#x27;</span> &gt;&gt; <span class="hljs-regexp">/etc/my</span>.cnfecho <span class="hljs-string">&#x27;pid-file=/var/run/mysqld/mysqld.pid&#x27;</span> &gt;&gt; <span class="hljs-regexp">/etc/my</span>.cnfecho <span class="hljs-string">&#x27;!includedir /etc/my.cnf.d&#x27;</span> &gt;&gt; <span class="hljs-regexp">/etc/my</span>.cnfecho <span class="hljs-string">&#x27;[client]&#x27;</span> &gt;&gt; <span class="hljs-regexp">/etc/my</span>.cnfecho <span class="hljs-string">&#x27;user=root&#x27;</span> &gt;&gt; <span class="hljs-regexp">/etc/my</span>.cnfecho <span class="hljs-string">&#x27;password=123456&#x27;</span> &gt;&gt; <span class="hljs-regexp">/etc/my</span>.cnfecho <span class="hljs-string">&#x27;port=3306&#x27;</span> &gt;&gt; <span class="hljs-regexp">/etc/my</span>.cnfecho <span class="hljs-string">&quot;配置修改完成，将mysql加入服务&quot;</span>cp <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/mysql/</span>support-files<span class="hljs-regexp">/mysql.server /</span>etc<span class="hljs-regexp">/init.d/my</span>sqld<span class="hljs-comment">#chmod +x /etc/init.d/mysqld</span>echo <span class="hljs-string">&quot;添加mysql指令&quot;</span>ln -s <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/mysql/</span>bin<span class="hljs-regexp">/mysql  /u</span>sr<span class="hljs-regexp">/local/</span>binln -s <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/mysql/</span>bin<span class="hljs-regexp">/mysqladmin  /u</span>sr<span class="hljs-regexp">/local/</span>bin<span class="hljs-comment">#echo &quot;服务启动&quot;</span>sudo service mysqld startsudo systemctl restart mysqldsystemctl status mysqld</code></pre><p>1、 修改用户密码</p><pre><code class="hljs routeros">mysql&gt; alter<span class="hljs-built_in"> user </span><span class="hljs-string">&#x27;root&#x27;</span>@<span class="hljs-string">&#x27;localhost&#x27;</span> identified by <span class="hljs-string">&#x27;root&#x27;</span>;  刷新权限mysql&gt; flush privileges;</code></pre><p>2、远程登录</p><pre><code class="hljs routeros">mysql&gt; update<span class="hljs-built_in"> user </span><span class="hljs-builtin-name">set</span> host = <span class="hljs-string">&#x27;%&#x27;</span> where<span class="hljs-built_in"> user </span>= <span class="hljs-string">&#x27;root&#x27;</span>;mysql&gt; grant all privileges on *.* <span class="hljs-keyword">to</span>  root@<span class="hljs-string">&#x27;%&#x27;</span> i dentified by <span class="hljs-string">&#x27;root&#x27;</span>;刷新权限mysql&gt; flush privileges;</code></pre><p>3、查找并删除mysql有关的文件</p><pre><code class="hljs swift"><span class="hljs-built_in">find</span> / -name mysqlrm -rf 上边查找到的路径，多个路径用空格隔开#或者下边一条命令即可<span class="hljs-built_in">find</span> / -name mysql|xargs rm -rf</code></pre>]]></content>
    
    
    
    <tags>
      
      <tag>Centos7</tag>
      
      <tag>MySQL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Nginx安装</title>
    <link href="/2020/08/10/Nginx%E5%AE%89%E8%A3%85/"/>
    <url>/2020/08/10/Nginx%E5%AE%89%E8%A3%85/</url>
    
    <content type="html"><![CDATA[<h4 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h4><pre><code class="hljs properties"><span class="hljs-attr">1</span> <span class="hljs-string">gcc 安装</span><span class="hljs-attr">yum</span> <span class="hljs-string">install -y gcc gcc-c++</span><span class="hljs-attr">2</span> <span class="hljs-string">PCRE pcre-devel 安装</span><span class="hljs-attr">yum</span> <span class="hljs-string">install -y pcre pcre-devel</span><span class="hljs-attr">3</span> <span class="hljs-string">zlib 安装</span><span class="hljs-attr">yum</span> <span class="hljs-string">install -y zlib zlib-devel</span><span class="hljs-attr">4</span> <span class="hljs-string">OpenSSL 安装</span><span class="hljs-attr">yum</span> <span class="hljs-string">install -y openssl openssl-devel</span></code></pre><h4 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h4><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><span class="hljs-comment">#安装目录</span>data=<span class="hljs-string">&quot;usr/local&quot;</span><span class="hljs-comment">#压缩包目录</span>default=<span class="hljs-string">&quot;home/mirror/nginx&quot;</span><span class="hljs-comment">#安装依赖</span><span class="hljs-comment">#1 gcc 安装</span>yum install -y gcc gcc-c++<span class="hljs-comment">#2 PCRE pcre-devel 安装</span>yum install -y pcre pcre-devel<span class="hljs-comment">#3 zlib 安装</span>yum install -y zlib zlib-devel<span class="hljs-comment">#4 OpenSSL 安装</span>yum install -y openssl openssl-devel<span class="hljs-comment">## 解压</span>tar -xvf ./nginx-1.19.1.tar.gz -C /<span class="hljs-variable">$&#123;data&#125;</span>/mv /<span class="hljs-variable">$&#123;data&#125;</span>/nginx-1.19.1 /<span class="hljs-variable">$&#123;data&#125;</span>/nginx<span class="hljs-comment">##进入nginx目录</span><span class="hljs-built_in">cd</span> /<span class="hljs-variable">$&#123;data&#125;</span>/nginx<span class="hljs-comment">## 配置</span>./configure --prefix=/usr/<span class="hljs-built_in">local</span>/nginx<span class="hljs-comment"># make</span>makemake installrm -rf logsmkdir logschmod 700 logs<span class="hljs-comment"># cd到刚才配置的安装目录/usr/loca/nginx/</span><span class="hljs-built_in">cd</span> /usr/<span class="hljs-built_in">local</span>/nginx./sbin/nginx -t<span class="hljs-comment">#在文件的32行加入文件引入</span><span class="hljs-built_in">cd</span> confsed -i <span class="hljs-string">&#x27;$d&#x27;</span> nginx.conf<span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;include /&#x27;</span><span class="hljs-variable">$&#123;default&#125;</span><span class="hljs-string">&#x27;/default.conf;&#x27;</span> &gt;&gt; nginx.conf<span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;&#125;&#x27;</span> &gt;&gt; nginx.conffirewall-cmd --zone=public --add-port=80/tcp --permanentfirewall-cmd --zone=public --add-port=8082/tcp --permanentsystemctl restart firewalld.service</code></pre>]]></content>
    
    
    
    <tags>
      
      <tag>Centos7</tag>
      
      <tag>Nginx</tag>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VMware Workstation 15 Pro 密钥</title>
    <link href="/2020/08/10/VMware%20Workstation%2015%20Pro%20%E5%AF%86%E9%92%A5/"/>
    <url>/2020/08/10/VMware%20Workstation%2015%20Pro%20%E5%AF%86%E9%92%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="VMware-Workstation-15-Pro-密钥"><a href="#VMware-Workstation-15-Pro-密钥" class="headerlink" title="VMware Workstation 15 Pro 密钥"></a>VMware Workstation 15 Pro 密钥</h1><pre><code class="hljs apache"><span class="hljs-attribute">UG5J2</span>-<span class="hljs-number">0</span>ME<span class="hljs-number">12</span>-M<span class="hljs-number">89</span>WY-NPWXX-WQH<span class="hljs-number">88</span><span class="hljs-attribute">GA590</span>-<span class="hljs-number">86</span>Y<span class="hljs-number">05</span>-<span class="hljs-number">4806</span>Y-X<span class="hljs-number">4</span>PEE-ZV<span class="hljs-number">8</span>E<span class="hljs-number">0</span><span class="hljs-attribute">YA18K</span>-<span class="hljs-number">0</span>WY<span class="hljs-number">8</span>P-H<span class="hljs-number">85</span>DY-L<span class="hljs-number">4</span>NZG-X<span class="hljs-number">7</span>RAD<span class="hljs-attribute">UA5DR</span>-<span class="hljs-number">2</span>ZD<span class="hljs-number">4</span>H-<span class="hljs-number">089</span>FY-<span class="hljs-number">6</span>YQ<span class="hljs-number">5</span>T-YPRX<span class="hljs-number">6</span><span class="hljs-attribute">B806Y</span>-<span class="hljs-number">86</span>Y<span class="hljs-number">05</span>-GA<span class="hljs-number">590</span>-X<span class="hljs-number">4</span>PEE-ZV<span class="hljs-number">8</span>E<span class="hljs-number">0</span><span class="hljs-attribute">ZF582</span>-<span class="hljs-number">0</span>NW<span class="hljs-number">5</span>N-H<span class="hljs-number">8</span>D<span class="hljs-number">2</span>P-<span class="hljs-number">0</span>XZEE-Z<span class="hljs-number">22</span>VA</code></pre>]]></content>
    
    
    
    <tags>
      
      <tag>VMware Workstation</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vue代理</title>
    <link href="/2020/08/10/Vue%E7%9B%B8%E5%85%B3/"/>
    <url>/2020/08/10/Vue%E7%9B%B8%E5%85%B3/</url>
    
    <content type="html"><![CDATA[<h4 id="资源路径代理（图片等）"><a href="#资源路径代理（图片等）" class="headerlink" title="资源路径代理（图片等）"></a>资源路径代理（图片等）</h4><h5 id="修改index-js"><a href="#修改index-js" class="headerlink" title="修改index.js"></a>修改index.js</h5><pre><code class="hljs dts"><span class="hljs-symbol">proxyTable:</span> &#123;    <span class="hljs-string">&quot;/resources&quot;</span>: &#123;<span class="hljs-symbol">        target:</span> <span class="hljs-string">&quot;http://localhost:9100/&quot;</span>, <span class="hljs-comment">//这里填写后端存放资源文件的域名</span><span class="hljs-symbol">        ws:</span> true,<span class="hljs-symbol">        changeOrigin:</span> true, 是否跨域        <span class="hljs-comment">// 如果接口中是没有api的，那就直接置空（如上）。如果接口中有api，就需要写成&#123;‘^/api’:‘/api’&#125;</span><span class="hljs-symbol">        pathRewrite:</span> &#123;        <span class="hljs-string">&quot;/api&quot;</span>: <span class="hljs-string">&quot;/&quot;</span>    &#125;&#125;,</code></pre>]]></content>
    
    
    
    <tags>
      
      <tag>Vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VMWare Centos7 NAT模式</title>
    <link href="/2020/08/10/%E8%99%9A%E6%8B%9F%E6%9C%BANAT%E6%A8%A1%E5%BC%8F/"/>
    <url>/2020/08/10/%E8%99%9A%E6%8B%9F%E6%9C%BANAT%E6%A8%A1%E5%BC%8F/</url>
    
    <content type="html"><![CDATA[<h2 id="1、VMware设置"><a href="#1、VMware设置" class="headerlink" title="1、VMware设置"></a>1、VMware设置</h2><p>点击 编辑 -&gt; 虚拟网络编辑器 -&gt; 更改设置 </p><p><img src="https://user-gold-cdn.xitu.io/2020/4/14/17177f4ac11cc681?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt="img"></p><p>选择 NAT模式，具体勾选如下：</p><p><img src="https://user-gold-cdn.xitu.io/2020/4/14/17177f82afeb2f5d?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt="img"></p><p>打开 NAT设置，记录子网掩码，网关ip</p><p><img src="https://user-gold-cdn.xitu.io/2020/4/14/17177fae46428226?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt="img"></p><p>记录网段信息</p><p><img src="https://user-gold-cdn.xitu.io/2020/4/14/17177fcd1baeb763?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt="img"></p><h2 id="2、登录虚拟机"><a href="#2、登录虚拟机" class="headerlink" title="2、登录虚拟机"></a>2、登录虚拟机</h2><p>root用户登录虚拟机，输入以命令，编辑保存</p><pre><code class="hljs angelscript">vi /etc/sysconfig/network-scripts/ifcfg-ens33ONBOOT=yesIPADDR=<span class="hljs-number">192.168</span><span class="hljs-number">.186</span><span class="hljs-number">.130</span>METMASK=<span class="hljs-number">255.255</span><span class="hljs-number">.255</span><span class="hljs-number">.0</span>GATEWAY=<span class="hljs-number">192.168</span><span class="hljs-number">.186</span><span class="hljs-number">.2</span>DNS=<span class="hljs-number">8.8</span><span class="hljs-number">.8</span><span class="hljs-number">.8</span></code></pre><p><img src="https://user-gold-cdn.xitu.io/2020/4/14/17178035c1b9e9c7?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt="img"></p><p>输入一下命令，重启network</p><pre><code class="hljs ebnf"><span class="hljs-attribute">systemctl restart network</span></code></pre><h2 id="3、验证"><a href="#3、验证" class="headerlink" title="3、验证"></a>3、验证</h2><p>  输入以下命令，查看结果</p><pre><code class="hljs css"><span class="hljs-selector-tag">ping</span> <span class="hljs-selector-tag">www</span><span class="hljs-selector-class">.baidu</span><span class="hljs-selector-class">.com</span></code></pre>]]></content>
    
    
    
    <tags>
      
      <tag>Centos7</tag>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Node</title>
    <link href="/2020/08/10/Node/"/>
    <url>/2020/08/10/Node/</url>
    
    <content type="html"><![CDATA[<h4 id="换源"><a href="#换源" class="headerlink" title="换源"></a>换源</h4><pre><code class="hljs arduino">持久使用npm <span class="hljs-built_in">config</span> <span class="hljs-built_in">set</span> registry https:<span class="hljs-comment">//registry.npm.taobao.org</span>配置后可通过下面方式来验证是否成功npm <span class="hljs-built_in">config</span> <span class="hljs-built_in">get</span> registry</code></pre>]]></content>
    
    
    
    <tags>
      
      <tag>Node</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2020/08/07/hello-world/"/>
    <url>/2020/08/07/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="hljs bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="hljs bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="hljs bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <categories>
      
      <category>Test</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Test</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
