{"meta":{"title":"Hexo","subtitle":"","description":"","author":"John Doe","url":"http://yoursite.com","root":"/"},"pages":[{"title":"about","date":"2020-08-05T15:56:25.000Z","updated":"2020-08-07T09:00:23.494Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":"没什么好说的，随便记录点东西"},{"title":"test","date":"2020-08-05T16:50:10.000Z","updated":"2020-08-07T08:51:45.895Z","comments":true,"path":"test/index.html","permalink":"http://yoursite.com/test/index.html","excerpt":"","text":""}],"posts":[{"title":"JDK脚本安装","slug":"JDK脚本安装","date":"2020-08-11T07:32:00.000Z","updated":"2020-08-17T02:27:34.792Z","comments":true,"path":"2020/08/11/JDK脚本安装/","link":"","permalink":"http://yoursite.com/2020/08/11/JDK%E8%84%9A%E6%9C%AC%E5%AE%89%E8%A3%85/","excerpt":"","text":"压缩包#!/bin/bash #判断是否安装有openJDK yum list installed |grep -e java -e jdk if [ $? -eq 0 ] then read -p &quot;继续执行将卸载已安装JDK,y确定，其他退出?&quot; choose if [ $choose==&quot;y&quot; ] then yum -y remove java-* &amp;&gt; /dev/null yum -y remove tzdata-java* &amp;&gt; /dev/null else exit 1 fi fi #判断安装包是否存在 if [ -f jdk-8u261-linux-x64.tar.gz ] #判断是否已经安装 then java &amp;&gt; /dev/null if [ $? -eq 0 ] then echo &quot;已经安装JDK&quot; exit 1 else echo &quot;开始安装JDK&quot; tar zxvf jdk-8u261-linux-x64.tar.gz -C /usr/local echo &quot;JDK安装完成，开始配置环境变量&quot; echo &#x27;export JAVA_HOME=/usr/jdk1.8.0_261&#x27; &gt;&gt; /etc/profile.d/jdkconf.sh echo &#x27;export PATH=$PATH:$JAVA_HOME/bin&#x27; &gt;&gt; /etc/profile.d/jdkconf.sh echo &#x27;export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar&#x27; &gt;&gt; /etc/profile.d/jdkconf.sh echo &quot;环境变量配置完成&quot; fi else echo &quot;请将当前shell脚本和安装包放在同一目录&quot; fi echo &quot;开始使环境变量生效&quot; chmod +x /etc/profile.d/jdkconf.sh source /etc/profile.d/jdkconf.sh echo &quot;======JDK安装完成，请使用命令：java -version检查是否成功安装=======&quot; rpm包#!/bin/bash #判断是否安装有openJDK yum list installed |grep -e java -e jdk if [ $? -eq 0 ] then read -p &quot;继续执行将卸载已有JDK,y确定，其他退出?&quot; choose if [ $choose==&quot;y&quot; ] then yum -y remove java-* &amp;&gt; /dev/null yum -y remove tzdata-java* &amp;&gt; /dev/null else exit 1 fi fi #判断安装包是否存在 if [ -f jdk-8u261-linux-x64.rpm ] #判断是否已经安装 then java &amp;&gt; /dev/null if [ $? -eq 0 ] then echo &quot;已经安装JDK&quot; exit 1 else echo &quot;开始安装JDK&quot; rpm -ivh jdk-8u261-linux-x64.rpm &amp;&gt;/dev/null echo &quot;JDK安装完成，开始配置环境变量&quot; echo &#x27;export JAVA_HOME=/usr/java/jdk1.8.0_261-amd64&#x27; &gt;&gt; /etc/profile.d/jdkconf.sh echo &#x27;export PATH=$JAVA_HOME/bin:$PATH&#x27; &gt;&gt; /etc/profile.d/jdkconf.sh echo &#x27;export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar&#x27; &gt;&gt; /etc/profile.d/jdkconf.sh echo &quot;环境变量配置完成&quot; fi else echo &quot;请将当前shell脚本和安装包放在同一目录&quot; fi chmod +x /etc/profile.d/jdkconf.sh sh /etc/profile.d/jdkconf.sh echo &quot;======JDK安装完成，请使用命令：java -version检查是否成功安装=======&quot;","categories":[],"tags":[{"name":"Centos7","slug":"Centos7","permalink":"http://yoursite.com/tags/Centos7/"},{"name":"JDK","slug":"JDK","permalink":"http://yoursite.com/tags/JDK/"},{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"}]},{"title":"Centos7 常用命令","slug":"Centos7 常用命令","date":"2020-08-10T07:32:00.000Z","updated":"2020-08-15T13:05:44.871Z","comments":true,"path":"2020/08/10/Centos7 常用命令/","link":"","permalink":"http://yoursite.com/2020/08/10/Centos7%20%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/","excerpt":"","text":"开端口【单个】 firewall-cmd --zone=public --add-port=8090/tcp --permanent 【范围】 firewall-cmd --zone=public --add-port=50000-50100/tcp --permanent 【删除】 firewall-cmd --zone=public --remove-port=80/tcp --permanent #找出公共区域的所有设置 firewall-cmd --zone=public --list-all firewall-cmd --list-all 重启防火墙：systemctl restart firewalld.service","categories":[],"tags":[{"name":"Centos7","slug":"Centos7","permalink":"http://yoursite.com/tags/Centos7/"}]},{"title":"Centos7搭建FTP","slug":"Centos7搭建FTP","date":"2020-08-10T07:32:00.000Z","updated":"2020-08-10T07:55:56.439Z","comments":true,"path":"2020/08/10/Centos7搭建FTP/","link":"","permalink":"http://yoursite.com/2020/08/10/Centos7%E6%90%AD%E5%BB%BAFTP/","excerpt":"","text":"安装前准备vsftpd是linux下的一款小巧轻快，安全易用的FTP服务器软件，是一款在各个Linux发行版中最受推崇的FTP服务器软件。 1.安装vsftpd，直接yum 安装就可以了 yum install -y vsftpd 2.相关配置文件： cd /etc/vsftpd 3.启动服务 systemctl enable vsftpd.service //设置开机自启动 systemctl start vsftpd.service //启动ftp服务 netstat -antup | grep ftp //查看ftp服务端口 4.另外简单介绍下vsftpd.conf的配置文件参数说明。 cat /etc/vsftpd/vsftpd.conf","categories":[],"tags":[{"name":"Centos7","slug":"Centos7","permalink":"http://yoursite.com/tags/Centos7/"},{"name":"ftp","slug":"ftp","permalink":"http://yoursite.com/tags/ftp/"}]},{"title":"Linux安装Node+Npm","slug":"Linux安装Node+Npm","date":"2020-08-10T07:32:00.000Z","updated":"2020-08-10T07:48:49.220Z","comments":true,"path":"2020/08/10/Linux安装Node+Npm/","link":"","permalink":"http://yoursite.com/2020/08/10/Linux%E5%AE%89%E8%A3%85Node+Npm/","excerpt":"","text":"Linux安装Node+Npm node官网下载node（**Linux Binaries (x64)**）安装包 https://nodejs.org/zh-cn/download/ 执行解压操作 tar -xvf node-v10.16.3-linux-x64.tar.xz 确认一下nodejs下bin目录是否有node 和npm文件,如果有执行软连接，如果没有重新下载 建立软连接，变为全局,对应自己路径 ln -s /usr/local/src/node-v10.16.3-linux-x64/bin/npm /usr/local/bin/(此处不改) ln -s /usr/local/src/node-v10.16.3-linux-x64/bin/node /usr/local/bin/ 验证node是否生效 npm -v node -v npm换源npm config set registry https://registry.npm.taobao.org // 配置后可通过下面方式来验证是否成功 npm config get registry","categories":[],"tags":[{"name":"node","slug":"node","permalink":"http://yoursite.com/tags/node/"},{"name":"npm","slug":"npm","permalink":"http://yoursite.com/tags/npm/"},{"name":"linux","slug":"linux","permalink":"http://yoursite.com/tags/linux/"}]},{"title":"Linux安装MongoDB","slug":"MongoDB","date":"2020-08-10T07:32:00.000Z","updated":"2020-08-10T07:50:07.124Z","comments":true,"path":"2020/08/10/MongoDB/","link":"","permalink":"http://yoursite.com/2020/08/10/MongoDB/","excerpt":"","text":"1.下载 官方下载地址：https://www.mongodb.com/download-center/community 2.上传解压 1.使用工具（FileZilla）上传至服务器 2.解压安装解压：tar -zxvf mongodb-linux-x86_64-4.0.6.tgz 移动：mv ./mongodb-linux-x86_64-4.0.6 /usr/local/mongodb 3.配置conf与目录 1.进入mongodb目录 cd /usr/local/mongodb/ 2.创建db目录和日志文件 mkdir -p ./data/db mkdir -p ./logs touch ./logs/mongodb.log 3.创建mongodb.conf文件 vim mongodb.conf #端口号 port=27017 #db目录 dbpath=/usr/local/mongodb/data/db #日志目录 logpath=//usr/local/mongodb/logs/mongodb.log #后台 fork=true #日志输出 logappend=true #允许远程IP连接 bind_ip=0.0.0.0 4.启动测试 1.启动 ./bin/mongod --config mongodb.conf 2.连接 ./bin/mongo --默认端口27017 ./bin/mongo localhost:23234 --指定端口，需要与配置的端口号一致 3.测试 5.配置mongodb服务开机启动1.设置mongodb.service开机服务启动cd /lib/systemd/system vim mongodb.service 添加如下配置--记得路劲和自己的配置路径要一致 [Unit] Description=mongodb After=network.target remote-fs.target nss-lookup.target [Service] Type=forking ExecStart=/usr/local/mongodb/bin/mongod --config /usr/local/mongodb/mongodb.conf ExecReload=/bin/kill -s HUP $MAINPID ExecStop=/usr/local/mongodb/bin/mongod --shutdown --config /usr/local/mongodb/mongodb.conf PrivateTmp=true [Install] WantedBy=multi-user.target 然后设置mongodb.service权限 chmod +x mongodb.service ​ #启动服务 systemctl start mongodb.service #停止服务 systemctl stop mongodb.service #添加开机自启动 systemctl enable mongodb.service #重启服务 systemctl restart mongodb.service 2）添加环境变量1、直接用export命令： export PATH=$PATH:/usr/local/mongodb/bin 2、修改profile文件： cat &gt;&gt;/etc/profile&lt;&lt;&quot;EOF&quot; export PATH=&quot;$PATH:/usr/local/mongodb/bin&quot; EOF 刷新profile文件： source /etc/profile 3、 修改.bashrc文件： cat &gt;&gt;/root/.bashrc&lt;&lt;&quot;EOF&quot; export PATH=&quot;$PATH:/usr/local/mongodb/bin&quot; EOF 上述三步依次执行完毕，环境变量配置完成！！！！ 重启服务器，输入mongo 回车就有了。。。。。","categories":[],"tags":[{"name":"linux","slug":"linux","permalink":"http://yoursite.com/tags/linux/"},{"name":"mongo","slug":"mongo","permalink":"http://yoursite.com/tags/mongo/"}]},{"title":"Mongo常用查询","slug":"Mongo常用查询","date":"2020-08-10T07:32:00.000Z","updated":"2020-08-10T07:49:29.007Z","comments":true,"path":"2020/08/10/Mongo常用查询/","link":"","permalink":"http://yoursite.com/2020/08/10/Mongo%E5%B8%B8%E7%94%A8%E6%9F%A5%E8%AF%A2/","excerpt":"","text":"查询并显示集合中的数据db.getCollection(&#x27;pixiv&#x27;).aggregate([ &#123; $group: &#123; _id : &#x27;$author.id&#x27;, count: &#123; $sum : 1 &#125; &#125; &#125;, &#123; $match: &#123; count: &#123; $gt : 1&#125; &#125; &#125; ]) 查询条件为数据中对象某个属性值db.getCollection(&#x27;pixiv&#x27;).find(&#123;&quot;author.id&quot;:35562628&#125;) 命令导出数据库./mongoexport -h 127.0.0.1 --port 50003 -d Images -c picjson -o /home/picjson.js --type json -f &quot;_id,tags,pid,p,uid,title,author,url,r18,width,height,_v&quot; 命令导入数据库./mongoimport -h 127.0.0.1 --port 50003 -d Pixiv -c picjson --file /home/picjson.js --type json","categories":[],"tags":[{"name":"mongodb","slug":"mongodb","permalink":"http://yoursite.com/tags/mongodb/"}]},{"title":"Navicat12激活","slug":"Navicat12激活","date":"2020-08-10T07:32:00.000Z","updated":"2020-08-10T07:50:36.826Z","comments":true,"path":"2020/08/10/Navicat12激活/","link":"","permalink":"http://yoursite.com/2020/08/10/Navicat12%E6%BF%80%E6%B4%BB/","excerpt":"","text":"本教程更新时间：2019-4-19 16:37:38 https://www.52pojie.cn/thread-934566-1-1.html 本文所需软件1、navicat_premium原版安装包官网下载地址：https://www.navicat.com.cn/download/navicat-premium2、注册工具github地址：https://github.com/DoubleLabyrinth/navicat-keygen以上本文所需文件已整理到网盘，自取：链接：https://pan.baidu.com/s/1MDuDFBsS0EI-rz4WkQ7kJw提取码：gdn5复制这段内容后打开百度网盘手机App，操作更方便哦 ~~ 分割线 好了，教程开始1、安装原版navicat正常安装，一直下一步，直到安装成功，这个我就不截图了。默认安装路径是：C:\\Program Files\\PremiumSoft\\Navicat Premium 122、开始激活2.1、首先需要先替换掉Navicat激活公钥a、解压navicat-keygen-for-x64.zip文件，开始执行cmd命令b、打开命令提示符（管理员），win+x(因为我是安装在了C盘，文件写入需要管理员权限，如果安装在别的盘，普通的命令提示符就行，或者在解压文件夹按住shift点右键，也能选择命令提示符打开) c、进入到navicat-keygen-for-x64.zip文件的解压目录，执行如下命令 cd [解压目录] .\\navicat-patcher.exe &quot;C:\\Program Files\\PremiumSoft\\Navicat Premium 12&quot; d、回车继续，一顿飘屏猛如虎，好的，出现这样的提示表示替换成功。成功之后会在当前文件夹下生成RegPrivateKey.pem文件 2.2、接下来我们就要开始生成序列号和激活码a、和替换公钥类似，执行如下命令 .\\navicat-keygen.exe -text .\\RegPrivateKey.pem b、接下来你会被要求选择Navicat产品类别、语言以及输入主版本号。之后会随机生成一个序列号。 c、得到序列号，复制下来，注意：窗口不要关闭 d、此时打开安装的原版Navicat，第一次打开会出现如下提示，点击注册按钮，进入注册页面 e、接下来输入用户名，组织名和请求码，然后回车两次，获得激活码 f、把获得到的激活码粘贴到navcat中，点击激活，激活成功。 附上激活成功的截图。","categories":[],"tags":[{"name":"Navicat","slug":"Navicat","permalink":"http://yoursite.com/tags/Navicat/"}]},{"title":"MySQ5.7脚本安装","slug":"Mysql5.7脚本安装","date":"2020-08-10T07:32:00.000Z","updated":"2020-08-15T12:58:09.165Z","comments":true,"path":"2020/08/10/Mysql5.7脚本安装/","link":"","permalink":"http://yoursite.com/2020/08/10/Mysql5.7%E8%84%9A%E6%9C%AC%E5%AE%89%E8%A3%85/","excerpt":"","text":"脚本#!/bin/bash data=&quot;root/mysql&quot; echo &quot;将mysql压缩包解压&quot; tar xvf mysql-5.7.30-linux-glibc2.12-x86_64.tar.gz echo &quot;新建mysql文件夹&quot; if [ ! -d &quot;/&quot;$&#123;data&#125;&quot;/mysql-5.7.30-linux-glibc2.12-x86_64&quot; ]; then echo &quot;mysql解压未完成&quot; exit fi echo &quot;mysql解压完成修改文件夹&quot; mv mysql-5.7.30-linux-glibc2.12-x86_64 mysql mv mysql /usr/local echo &quot;mysql解压完成&quot; echo &quot;切换目录&quot; cd /usr/local/mysql/ echo &quot;新建数据库data目录&quot; mkdir data echo &quot;初始化mysql&quot; cd /usr/local/mysql/ bin/mysqld --initialize --user=root --basedir=/usr/local/mysql --datadir=/usr/local/mysql/data echo &quot;修改配置文件&quot; cat /dev/null &gt; /etc/my.cnf if [ -f &quot;/etc/my.cnf&quot; ]; then mv /etc/my.cnf /etc/my.cnf.bak fi echo &#x27;[mysqld]&#x27; &gt;&gt; /etc/my.cnf echo &#x27;bind-address=0.0.0.0&#x27; &gt;&gt; /etc/my.cnf echo &#x27;basedir = /usr/local/mysql&#x27; &gt;&gt; /etc/my.cnf echo &#x27;datadir = /usr/local/mysql/data&#x27; &gt;&gt; /etc/my.cnf echo &#x27;socket=/tmp/mysql.sock&#x27; &gt;&gt; /etc/my.cnf echo &#x27;user=root&#x27; &gt;&gt; /etc/my.cnf echo &#x27;port=3306&#x27; &gt;&gt; /etc/my.cnf echo &#x27;character-set-server=utf8&#x27; &gt;&gt; /etc/my.cnf #echo &#x27;skip-grant-tables&#x27; &gt;&gt; /etc/my.cnf echo &#x27;# Disabling symbolic-links is recommended to prevent assorted security risks&#x27; &gt;&gt; /etc/my.cnf echo &#x27;symbolic-links=0&#x27; &gt;&gt; /etc/my.cnf echo &#x27;# skip-grant-tables&#x27; &gt;&gt; /etc/my.cnf echo &#x27;[mysqld_safe]&#x27; &gt;&gt; /etc/my.cnf echo &#x27;log-error=/var/log/mysqld.log&#x27; &gt;&gt; /etc/my.cnf echo &#x27;pid-file=/var/run/mysqld/mysqld.pid&#x27; &gt;&gt; /etc/my.cnf echo &#x27;!includedir /etc/my.cnf.d&#x27; &gt;&gt; /etc/my.cnf echo &#x27;[client]&#x27; &gt;&gt; /etc/my.cnf echo &#x27;user=root&#x27; &gt;&gt; /etc/my.cnf echo &#x27;password=123456&#x27; &gt;&gt; /etc/my.cnf echo &#x27;port=3306&#x27; &gt;&gt; /etc/my.cnf echo &quot;配置修改完成，将mysql加入服务&quot; cp /usr/local/mysql/support-files/mysql.server /etc/init.d/mysqld #chmod +x /etc/init.d/mysqld echo &quot;添加mysql指令&quot; ln -s /usr/local/mysql/bin/mysql /usr/local/bin ln -s /usr/local/mysql/bin/mysqladmin /usr/local/bin #echo &quot;服务启动&quot; sudo service mysqld start sudo systemctl restart mysqld systemctl status mysqld 1、 修改用户密码 mysql&gt; alter user &#x27;root&#x27;@&#x27;localhost&#x27; identified by &#x27;root&#x27;; 刷新权限 mysql&gt; flush privileges; 2、远程登录 mysql&gt; update user set host = &#x27;%&#x27; where user = &#x27;root&#x27;; mysql&gt; grant all privileges on *.* to root@&#x27;%&#x27; i dentified by &#x27;root&#x27;; 刷新权限 mysql&gt; flush privileges; 3、查找并删除mysql有关的文件 find / -name mysql rm -rf 上边查找到的路径，多个路径用空格隔开 #或者下边一条命令即可 find / -name mysql|xargs rm -rf","categories":[],"tags":[{"name":"Centos7","slug":"Centos7","permalink":"http://yoursite.com/tags/Centos7/"},{"name":"MySQL","slug":"MySQL","permalink":"http://yoursite.com/tags/MySQL/"}]},{"title":"Nginx安装","slug":"Nginx安装","date":"2020-08-10T07:32:00.000Z","updated":"2020-08-17T00:57:45.314Z","comments":true,"path":"2020/08/10/Nginx安装/","link":"","permalink":"http://yoursite.com/2020/08/10/Nginx%E5%AE%89%E8%A3%85/","excerpt":"","text":"安装依赖1 gcc 安装 yum install -y gcc gcc-c++ 2 PCRE pcre-devel 安装 yum install -y pcre pcre-devel 3 zlib 安装 yum install -y zlib zlib-devel 4 OpenSSL 安装 yum install -y openssl openssl-devel","categories":[],"tags":[{"name":"Centos7","slug":"Centos7","permalink":"http://yoursite.com/tags/Centos7/"},{"name":"Nginx","slug":"Nginx","permalink":"http://yoursite.com/tags/Nginx/"},{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"}]},{"title":"VMware Workstation 15 Pro 密钥","slug":"VMware Workstation 15 Pro 密钥","date":"2020-08-10T07:32:00.000Z","updated":"2020-08-10T07:53:07.967Z","comments":true,"path":"2020/08/10/VMware Workstation 15 Pro 密钥/","link":"","permalink":"http://yoursite.com/2020/08/10/VMware%20Workstation%2015%20Pro%20%E5%AF%86%E9%92%A5/","excerpt":"","text":"VMware Workstation 15 Pro 密钥UG5J2-0ME12-M89WY-NPWXX-WQH88 GA590-86Y05-4806Y-X4PEE-ZV8E0 YA18K-0WY8P-H85DY-L4NZG-X7RAD UA5DR-2ZD4H-089FY-6YQ5T-YPRX6 B806Y-86Y05-GA590-X4PEE-ZV8E0 ZF582-0NW5N-H8D2P-0XZEE-Z22VA","categories":[],"tags":[{"name":"VMware Workstation","slug":"VMware-Workstation","permalink":"http://yoursite.com/tags/VMware-Workstation/"}]},{"title":"Vue代理","slug":"Vue相关","date":"2020-08-10T07:32:00.000Z","updated":"2020-08-10T07:53:30.122Z","comments":true,"path":"2020/08/10/Vue相关/","link":"","permalink":"http://yoursite.com/2020/08/10/Vue%E7%9B%B8%E5%85%B3/","excerpt":"","text":"资源路径代理（图片等）修改index.jsproxyTable: &#123; &quot;/resources&quot;: &#123; target: &quot;http://localhost:9100/&quot;, //这里填写后端存放资源文件的域名 ws: true, changeOrigin: true, 是否跨域 // 如果接口中是没有api的，那就直接置空（如上）。如果接口中有api，就需要写成&#123;‘^/api’:‘/api’&#125; pathRewrite: &#123; &quot;/api&quot;: &quot;/&quot; &#125; &#125;,","categories":[],"tags":[{"name":"Vue","slug":"Vue","permalink":"http://yoursite.com/tags/Vue/"}]},{"title":"VMWare Centos7 NAT模式","slug":"虚拟机NAT模式","date":"2020-08-10T07:32:00.000Z","updated":"2020-08-14T12:25:04.963Z","comments":true,"path":"2020/08/10/虚拟机NAT模式/","link":"","permalink":"http://yoursite.com/2020/08/10/%E8%99%9A%E6%8B%9F%E6%9C%BANAT%E6%A8%A1%E5%BC%8F/","excerpt":"","text":"1、VMware设置点击 编辑 -&gt; 虚拟网络编辑器 -&gt; 更改设置 选择 NAT模式，具体勾选如下： 打开 NAT设置，记录子网掩码，网关ip 记录网段信息 2、登录虚拟机root用户登录虚拟机，输入以命令，编辑保存 vi /etc/sysconfig/network-scripts/ifcfg-ens33 ONBOOT=yes IPADDR=192.168.186.130 METMASK=255.255.255.0 GATEWAY=192.168.186.2 DNS=8.8.8.8 输入一下命令，重启network systemctl restart network 3、验证 输入以下命令，查看结果 ping www.baidu.com","categories":[],"tags":[{"name":"Centos7","slug":"Centos7","permalink":"http://yoursite.com/tags/Centos7/"},{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"}]},{"title":"Hello World","slug":"hello-world","date":"2020-08-07T08:51:47.528Z","updated":"2020-08-07T11:03:38.360Z","comments":true,"path":"2020/08/07/hello-world/","link":"","permalink":"http://yoursite.com/2020/08/07/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post$ hexo new &quot;My New Post&quot; More info: Writing Run server$ hexo server More info: Server Generate static files$ hexo generate More info: Generating Deploy to remote sites$ hexo deploy More info: Deployment","categories":[{"name":"Test","slug":"Test","permalink":"http://yoursite.com/categories/Test/"}],"tags":[{"name":"Test","slug":"Test","permalink":"http://yoursite.com/tags/Test/"}]}],"categories":[{"name":"Test","slug":"Test","permalink":"http://yoursite.com/categories/Test/"}],"tags":[{"name":"Centos7","slug":"Centos7","permalink":"http://yoursite.com/tags/Centos7/"},{"name":"JDK","slug":"JDK","permalink":"http://yoursite.com/tags/JDK/"},{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"},{"name":"ftp","slug":"ftp","permalink":"http://yoursite.com/tags/ftp/"},{"name":"node","slug":"node","permalink":"http://yoursite.com/tags/node/"},{"name":"npm","slug":"npm","permalink":"http://yoursite.com/tags/npm/"},{"name":"linux","slug":"linux","permalink":"http://yoursite.com/tags/linux/"},{"name":"mongo","slug":"mongo","permalink":"http://yoursite.com/tags/mongo/"},{"name":"mongodb","slug":"mongodb","permalink":"http://yoursite.com/tags/mongodb/"},{"name":"Navicat","slug":"Navicat","permalink":"http://yoursite.com/tags/Navicat/"},{"name":"MySQL","slug":"MySQL","permalink":"http://yoursite.com/tags/MySQL/"},{"name":"Nginx","slug":"Nginx","permalink":"http://yoursite.com/tags/Nginx/"},{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"VMware Workstation","slug":"VMware-Workstation","permalink":"http://yoursite.com/tags/VMware-Workstation/"},{"name":"Vue","slug":"Vue","permalink":"http://yoursite.com/tags/Vue/"},{"name":"Test","slug":"Test","permalink":"http://yoursite.com/tags/Test/"}]}