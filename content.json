{"meta":{"title":"Hexo","subtitle":"","description":"","author":"John Doe","url":"http://yoursite.com","root":"/"},"pages":[{"title":"about","date":"2020-08-05T15:56:25.000Z","updated":"2020-08-07T09:00:23.494Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":"没什么好说的，随便记录点东西"},{"title":"test","date":"2020-08-05T16:50:10.000Z","updated":"2020-08-07T08:51:45.895Z","comments":true,"path":"test/index.html","permalink":"http://yoursite.com/test/index.html","excerpt":"","text":""}],"posts":[{"title":"Linux安装RabbitMQ","slug":"Centos7安装RabbitMQ","date":"2020-09-22T07:40:00.000Z","updated":"2020-09-22T09:15:34.284Z","comments":true,"path":"2020/09/22/Centos7安装RabbitMQ/","link":"","permalink":"http://yoursite.com/2020/09/22/Centos7%E5%AE%89%E8%A3%85RabbitMQ/","excerpt":"","text":"安装ErlangRabbitMQ是用Erlang语言编写的，在本教程中我们将安装最新版本的Erlang到服务器中。 Erlang在默认的YUM存储库中不可用，因此您将需要安装EPEL存储库。 运行以下命令相同。 yum -y install epel-release yum -y update 现在使用以下命令安装Erlang。 yum -y install erlang socat 您现在可以使用以下命令检查Erlang版本。 erl -version 您将得到以下输出。 [root@liptan-pc ~]# erl -version Erlang (ASYNC_THREADS,HIPE) (BEAM) emulator version 5.10.4 要切换到Erlang shell，可以键入以下命令。 erl shell将更改，您将得到以下输出。 Erlang R16B03-1 (erts-5.10.4) [source] [64-bit] [async-threads:10] [hipe] [kernel-poll:false] Eshell V5.10.4 (abort with ^G) 1&gt; 您可以通过按ctrl + C两次退出shell。 Erlang现在安装在系统上，现在可以继续安装RabbitMQ。 安装RabbitMQRabbitMQ为预编译并可以直接安装的企业Linux系统提供RPM软件包。 唯一需要的依赖是将Erlang安装到系统中。 我们已经安装了Erlang，我们可以进一步下载RabbitMQ。 通过运行下载Erlang RPM软件包。 wget https://www.rabbitmq.com/releases/rabbitmq-server/v3.6.10/rabbitmq-server-3.6.10-1.el7.noarch.rpm 如果你没有安装wget ，可以运行yum -y install wget 。 您可以随时找到最新版本的RabbitMQ下载页面的链接。 通过运行导入GPG密钥： rpm –import https://www.rabbitmq.com/rabbitmq-release-signing-key.asc 运行RPM安装RPM包： rpm -Uvh rabbitmq-server-3.6.10-1.el7.noarch.rpm RabbitMQ现已安装在您的系统上。 开始RabbitMQ您可以通过运行以下命令启动RabbitMQ服务器进程。 systemctl start rabbitmq-server 要在引导时自动启动RabbitMQ，请运行以下命令。 systemctl enable rabbitmq-server 要检查RabbitMQ服务器的状态，请运行： systemctl status rabbitmq-server 如果启动成功，您应该得到以下输出。 ? rabbitmq-server.service - RabbitMQ broker Loaded: loaded (/usr/lib/systemd/system/rabbitmq-server.service; enabled; vendor preset: disabled) Active: active (running) since Sat 2017-07-15 18:59:14 UTC; 3min 22s ago Main PID: 29006 (beam.smp) Status: &quot;Initialized&quot; CGroup: /system.slice/rabbitmq-server.service ??29006 /usr/lib64/erlang/erts-9.0/bin/beam.smp -W w -A 64 -P 1048576 -t 5000000 -stbt db -zdbbl 32000 -K tr... ??29149 /usr/lib64/erlang/erts-9.0/bin/epmd -daemon ??29283 erl_child_setup 1024 ??29303 inet_gethost 4 ??29304 inet_gethost 4 Jul 15 18:59:13 centos rabbitmq-server[29006]: Starting broker... Jul 15 18:59:14 centos rabbitmq-server[29006]: systemd unit for activation check: &quot;rabbitmq-server.service&quot; Jul 15 18:59:14 centos systemd[1]: Started RabbitMQ broker. Jul 15 18:59:14 centos rabbitmq-server[29006]: completed with 0 plugins. 修改防火墙和SELinux规则如果您已安装并运行防火墙 ，则必须通过防火墙允许端口8161。 运行以下命令相同。 或者直接关闭防火墙 systemctl stop firewalld.service firewall-cmd –zone=public –permanent –add-port=4369/tcp firewall-cmd –zone=public –permanent –add-port=25672/tcp firewall-cmd –zone=public –permanent –add-port=5671-5672/tcp firewall-cmd –zone=public –permanent –add-port=15672/tcp firewall-cmd –zone=public –permanent –add-port=61613-61614/tcp firewall-cmd –zone=public –permanent –add-port=1883/tcp firewall-cmd –zone=public –permanent –add-port=8883/tcp firewall-cmd –reload 如果您启用SELinux，则必须运行以下命令以允许RabbitMQ服务。 setsebool -P nis_enabled 1 访问Web控制台启动RabbitMQ Web管理控制台，方法是运行： rabbitmq-plugins enable rabbitmq_management 通过运行以下命令，将RabbitMQ文件的所有权提供给RabbitMQ用户： chown -R rabbitmq:rabbitmq /var/lib/rabbitmq/ 现在，您将需要为RabbitMQ Web管理控制台创建管理用户。 运行以下命令相同。 rabbitmqctl add_user admin StrongPassword rabbitmqctl set_user_tags admin administrator rabbitmqctl set_permissions -p / admin “.*” “.*” “.*” 修改密码 rabbitmqctl change_password admin &#x27;Newpassword&#x27; 将管理员更改为管理员用户的首选用户名。 确保将StrongPassword更改为非常强大的密码。 要访问RabbitMQ的管理面板，请使用您最喜爱的Web浏览器并打开以下URL。 http://Your_Server_IP:15672/ 开启远程访问在使用上述新建的账号访问webUI界面可以看到Config file，在overview下面, 如果没有找到配置文件后面会加上（not found） 没有就到该目录下新建一个，并开启远程访问（在结合SpringBoot时，RabbitMQ初始化默认是使用guest账户，因此需要给该账户开启远程访问），配置如下 [ &#123; rabbit , [ &#123; tcp_listeners , [ 5672 ] &#125; , &#123; loopback_users , [ &quot;guest&quot; ] &#125; ] &#125; ]. ps：最后的英文句号不能漏掉","categories":[],"tags":[{"name":"Centos7","slug":"Centos7","permalink":"http://yoursite.com/tags/Centos7/"},{"name":"Rabbit","slug":"Rabbit","permalink":"http://yoursite.com/tags/Rabbit/"},{"name":"消息队列","slug":"消息队列","permalink":"http://yoursite.com/tags/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/"}]},{"title":"JDK脚本安装","slug":"JDK脚本安装","date":"2020-08-11T07:32:00.000Z","updated":"2020-09-04T07:37:10.306Z","comments":true,"path":"2020/08/11/JDK脚本安装/","link":"","permalink":"http://yoursite.com/2020/08/11/JDK%E8%84%9A%E6%9C%AC%E5%AE%89%E8%A3%85/","excerpt":"","text":"脚本脚本与压缩包同目录 #!/bin/bash #判断是否安装有openJDK yum list installed |grep -e java -e jdk if [ $? -eq 0 ] then read -p &quot;继续执行将卸载已有JDK,y确定，其他退出?&quot; choose if [ $choose==&quot;y&quot; ] then yum -y remove java-* &amp;&gt; /dev/null yum -y remove tzdata-java* &amp;&gt; /dev/null else exit 1 fi fi #判断安装包是否存在 if [ -f jdk-8u261-linux-x64.tar.gz ] #判断是否已经安装 then java &amp;&gt; /dev/null if [ $? -eq 0 ] then echo &quot;已经安装JDK&quot; exit 1 else echo &quot;开始安装JDK&quot; tar zxvf jdk-8u261-linux-x64.tar.gz -C /usr/local echo &quot;JDK安装完成，开始配置环境变量&quot; cat /dev/null &gt; /etc/profile.d/jdkconf.sh echo &#x27;export JAVA_HOME=/usr/local/jdk1.8.0_261&#x27; &gt;&gt; /etc/profile.d/jdkconf.sh echo &#x27;export PATH=$PATH:$JAVA_HOME/bin&#x27; &gt;&gt; /etc/profile.d/jdkconf.sh echo &#x27;export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar&#x27; &gt;&gt; /etc/profile.d/jdkconf.sh echo &quot;环境变量配置完成&quot; fi else echo &quot;请将当前shell脚本和安装包放在同一目录&quot; fi chmod +x /etc/profile.d/jdkconf.sh source /etc/profile.d/jdkconf.sh echo &quot;======JDK安装完成，请使用命令：java -version检查是否成功安装,若失败请执行source /etc/profile.d/jdkconf.sh=======&quot; rpm包#!/bin/bash #判断是否安装有openJDK yum list installed |grep -e java -e jdk if [ $? -eq 0 ] then read -p &quot;继续执行将卸载已有JDK,y确定，其他退出?&quot; choose if [ $choose==&quot;y&quot; ] then yum -y remove java-* &amp;&gt; /dev/null yum -y remove tzdata-java* &amp;&gt; /dev/null else exit 1 fi fi #判断安装包是否存在 if [ -f jdk-8u261-linux-x64.rpm ] #判断是否已经安装 then java &amp;&gt; /dev/null if [ $? -eq 0 ] then echo &quot;已经安装JDK&quot; exit 1 else echo &quot;开始安装JDK&quot; rpm -ivh jdk-8u261-linux-x64.rpm &amp;&gt;/dev/null echo &quot;JDK安装完成，开始配置环境变量&quot; echo &#x27;export JAVA_HOME=/usr/java/jdk1.8.0_261-amd64&#x27; &gt;&gt; /etc/profile.d/jdkconf.sh echo &#x27;export PATH=$JAVA_HOME/bin:$PATH&#x27; &gt;&gt; /etc/profile.d/jdkconf.sh echo &#x27;export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar&#x27; &gt;&gt; /etc/profile.d/jdkconf.sh echo &quot;环境变量配置完成&quot; fi else echo &quot;请将当前shell脚本和安装包放在同一目录&quot; fi chmod +x /etc/profile.d/jdkconf.sh sh /etc/profile.d/jdkconf.sh echo &quot;======JDK安装完成，请使用命令：java -version检查是否成功安装=======&quot;","categories":[],"tags":[{"name":"Centos7","slug":"Centos7","permalink":"http://yoursite.com/tags/Centos7/"},{"name":"JDK","slug":"JDK","permalink":"http://yoursite.com/tags/JDK/"},{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"}]},{"title":"Centos7 常用命令","slug":"Centos7 常用命令","date":"2020-08-10T07:32:00.000Z","updated":"2020-09-28T07:21:37.112Z","comments":true,"path":"2020/08/10/Centos7 常用命令/","link":"","permalink":"http://yoursite.com/2020/08/10/Centos7%20%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/","excerpt":"","text":"开端口【单个】 firewall-cmd --zone=public --add-port=20/tcp --permanent 【范围】 firewall-cmd --zone=public --remove-port=8000-8900/tcp --permanent 【删除】 firewall-cmd --zone=public --remove-port=80/tcp --permanent #找出公共区域的所有设置 firewall-cmd --zone=public --list-all firewall-cmd --list-all 重启防火墙：systemctl restart firewalld.service systemctl stop firewalld.service","categories":[],"tags":[{"name":"Centos7","slug":"Centos7","permalink":"http://yoursite.com/tags/Centos7/"}]},{"title":"Centos7搭建FTP","slug":"Centos7搭建FTP","date":"2020-08-10T07:32:00.000Z","updated":"2020-09-28T07:58:53.566Z","comments":true,"path":"2020/08/10/Centos7搭建FTP/","link":"","permalink":"http://yoursite.com/2020/08/10/Centos7%E6%90%AD%E5%BB%BAFTP/","excerpt":"","text":"安装前准备vsftpd是linux下的一款小巧轻快，安全易用的FTP服务器软件，是一款在各个Linux发行版中最受推崇的FTP服务器软件。 1.安装vsftpd，直接yum 安装就可以了 yum install -y vsftpd 2.相关配置文件： cd /etc/vsftpd/ 3.启动服务 systemctl enable vsftpd.service //设置开机自启动 systemctl start vsftpd.service //启动ftp服务 netstat -antup | grep ftp //查看ftp服务端口 3.修改相关配置文件 vim /etc/vsftpd/vsftpd.conf 创建ftp用户1.创建用户并指定目录 useradd -d /var/www/ftpData admin #目录自己创建 passwd admin #(回车)给用户admin设置登录密码 2.修改配置文件 userlist_enable=YES #启动用户列表 userlist_deny=NO #决定是否对用户列表的用户拒绝访问ftp userlist_file=/etc/vsftpd/user_list 3.在user_list中写入 ftp这个用户 4.配置vsftpd.conf 锁定根目录 local_root= /var/www #本地用户登录后自动转到的ftp根目录 chroot_local_user=YES #将所有用户限定在指定的主目录内 chroot_list_enable=NO #不启用列外的用户列表 chroot_list_file=/etc/vsftpd/chroot_list #指定列外的用户列表文件 此文件是让用户登录后可以查看其他目录，若要使用户仅在指定的ftp目录，该文件就不要填写该用户 5.修改ftp目录的权限,将用户添加到root组 usermod -g root admin chown admin:root /var/www/ftpData ！！添加到root用户组后需要修改配置文件，加上以下配置： allow_writeable_chroot=YES","categories":[],"tags":[{"name":"Centos7","slug":"Centos7","permalink":"http://yoursite.com/tags/Centos7/"},{"name":"ftp","slug":"ftp","permalink":"http://yoursite.com/tags/ftp/"}]},{"title":"Linux安装MongoDB","slug":"MongoDB","date":"2020-08-10T07:32:00.000Z","updated":"2020-08-10T07:50:07.124Z","comments":true,"path":"2020/08/10/MongoDB/","link":"","permalink":"http://yoursite.com/2020/08/10/MongoDB/","excerpt":"","text":"1.下载 官方下载地址：https://www.mongodb.com/download-center/community 2.上传解压 1.使用工具（FileZilla）上传至服务器 2.解压安装解压：tar -zxvf mongodb-linux-x86_64-4.0.6.tgz 移动：mv ./mongodb-linux-x86_64-4.0.6 /usr/local/mongodb 3.配置conf与目录 1.进入mongodb目录 cd /usr/local/mongodb/ 2.创建db目录和日志文件 mkdir -p ./data/db mkdir -p ./logs touch ./logs/mongodb.log 3.创建mongodb.conf文件 vim mongodb.conf #端口号 port=27017 #db目录 dbpath=/usr/local/mongodb/data/db #日志目录 logpath=//usr/local/mongodb/logs/mongodb.log #后台 fork=true #日志输出 logappend=true #允许远程IP连接 bind_ip=0.0.0.0 4.启动测试 1.启动 ./bin/mongod --config mongodb.conf 2.连接 ./bin/mongo --默认端口27017 ./bin/mongo localhost:23234 --指定端口，需要与配置的端口号一致 3.测试 5.配置mongodb服务开机启动1.设置mongodb.service开机服务启动cd /lib/systemd/system vim mongodb.service 添加如下配置--记得路劲和自己的配置路径要一致 [Unit] Description=mongodb After=network.target remote-fs.target nss-lookup.target [Service] Type=forking ExecStart=/usr/local/mongodb/bin/mongod --config /usr/local/mongodb/mongodb.conf ExecReload=/bin/kill -s HUP $MAINPID ExecStop=/usr/local/mongodb/bin/mongod --shutdown --config /usr/local/mongodb/mongodb.conf PrivateTmp=true [Install] WantedBy=multi-user.target 然后设置mongodb.service权限 chmod +x mongodb.service ​ #启动服务 systemctl start mongodb.service #停止服务 systemctl stop mongodb.service #添加开机自启动 systemctl enable mongodb.service #重启服务 systemctl restart mongodb.service 2）添加环境变量1、直接用export命令： export PATH=$PATH:/usr/local/mongodb/bin 2、修改profile文件： cat &gt;&gt;/etc/profile&lt;&lt;&quot;EOF&quot; export PATH=&quot;$PATH:/usr/local/mongodb/bin&quot; EOF 刷新profile文件： source /etc/profile 3、 修改.bashrc文件： cat &gt;&gt;/root/.bashrc&lt;&lt;&quot;EOF&quot; export PATH=&quot;$PATH:/usr/local/mongodb/bin&quot; EOF 上述三步依次执行完毕，环境变量配置完成！！！！ 重启服务器，输入mongo 回车就有了。。。。。","categories":[],"tags":[{"name":"linux","slug":"linux","permalink":"http://yoursite.com/tags/linux/"},{"name":"mongo","slug":"mongo","permalink":"http://yoursite.com/tags/mongo/"}]},{"title":"Mongo常用查询","slug":"Mongo常用查询","date":"2020-08-10T07:32:00.000Z","updated":"2020-08-10T07:49:29.007Z","comments":true,"path":"2020/08/10/Mongo常用查询/","link":"","permalink":"http://yoursite.com/2020/08/10/Mongo%E5%B8%B8%E7%94%A8%E6%9F%A5%E8%AF%A2/","excerpt":"","text":"查询并显示集合中的数据db.getCollection(&#x27;pixiv&#x27;).aggregate([ &#123; $group: &#123; _id : &#x27;$author.id&#x27;, count: &#123; $sum : 1 &#125; &#125; &#125;, &#123; $match: &#123; count: &#123; $gt : 1&#125; &#125; &#125; ]) 查询条件为数据中对象某个属性值db.getCollection(&#x27;pixiv&#x27;).find(&#123;&quot;author.id&quot;:35562628&#125;) 命令导出数据库./mongoexport -h 127.0.0.1 --port 50003 -d Images -c picjson -o /home/picjson.js --type json -f &quot;_id,tags,pid,p,uid,title,author,url,r18,width,height,_v&quot; 命令导入数据库./mongoimport -h 127.0.0.1 --port 50003 -d Pixiv -c picjson --file /home/picjson.js --type json","categories":[],"tags":[{"name":"mongodb","slug":"mongodb","permalink":"http://yoursite.com/tags/mongodb/"}]},{"title":"Navicat12激活","slug":"Navicat12激活","date":"2020-08-10T07:32:00.000Z","updated":"2020-08-10T07:50:36.826Z","comments":true,"path":"2020/08/10/Navicat12激活/","link":"","permalink":"http://yoursite.com/2020/08/10/Navicat12%E6%BF%80%E6%B4%BB/","excerpt":"","text":"本教程更新时间：2019-4-19 16:37:38 https://www.52pojie.cn/thread-934566-1-1.html 本文所需软件1、navicat_premium原版安装包官网下载地址：https://www.navicat.com.cn/download/navicat-premium2、注册工具github地址：https://github.com/DoubleLabyrinth/navicat-keygen以上本文所需文件已整理到网盘，自取：链接：https://pan.baidu.com/s/1MDuDFBsS0EI-rz4WkQ7kJw提取码：gdn5复制这段内容后打开百度网盘手机App，操作更方便哦 ~~ 分割线 好了，教程开始1、安装原版navicat正常安装，一直下一步，直到安装成功，这个我就不截图了。默认安装路径是：C:\\Program Files\\PremiumSoft\\Navicat Premium 122、开始激活2.1、首先需要先替换掉Navicat激活公钥a、解压navicat-keygen-for-x64.zip文件，开始执行cmd命令b、打开命令提示符（管理员），win+x(因为我是安装在了C盘，文件写入需要管理员权限，如果安装在别的盘，普通的命令提示符就行，或者在解压文件夹按住shift点右键，也能选择命令提示符打开) c、进入到navicat-keygen-for-x64.zip文件的解压目录，执行如下命令 cd [解压目录] .\\navicat-patcher.exe &quot;C:\\Program Files\\PremiumSoft\\Navicat Premium 12&quot; d、回车继续，一顿飘屏猛如虎，好的，出现这样的提示表示替换成功。成功之后会在当前文件夹下生成RegPrivateKey.pem文件 2.2、接下来我们就要开始生成序列号和激活码a、和替换公钥类似，执行如下命令 .\\navicat-keygen.exe -text .\\RegPrivateKey.pem b、接下来你会被要求选择Navicat产品类别、语言以及输入主版本号。之后会随机生成一个序列号。 c、得到序列号，复制下来，注意：窗口不要关闭 d、此时打开安装的原版Navicat，第一次打开会出现如下提示，点击注册按钮，进入注册页面 e、接下来输入用户名，组织名和请求码，然后回车两次，获得激活码 f、把获得到的激活码粘贴到navcat中，点击激活，激活成功。 附上激活成功的截图。","categories":[],"tags":[{"name":"Navicat","slug":"Navicat","permalink":"http://yoursite.com/tags/Navicat/"}]},{"title":"MySQ5.7脚本安装","slug":"Mysql5.7脚本安装","date":"2020-08-10T07:32:00.000Z","updated":"2020-09-10T02:43:11.106Z","comments":true,"path":"2020/08/10/Mysql5.7脚本安装/","link":"","permalink":"http://yoursite.com/2020/08/10/Mysql5.7%E8%84%9A%E6%9C%AC%E5%AE%89%E8%A3%85/","excerpt":"","text":"脚本#!/bin/bash #压缩包目录 data=&quot;home/mysql&quot; echo &quot;将mysql压缩包解压&quot; tar xvf mysql-5.7.30-linux-glibc2.12-x86_64.tar.gz echo &quot;新建mysql文件夹&quot; if [ ! -d &quot;/&quot;$&#123;data&#125;&quot;/mysql-5.7.30-linux-glibc2.12-x86_64&quot; ]; then echo &quot;mysql解压未完成&quot; exit fi echo &quot;mysql解压完成修改文件夹&quot; mv mysql-5.7.30-linux-glibc2.12-x86_64 mysql mv mysql /usr/local echo &quot;mysql解压完成&quot; echo &quot;切换目录&quot; cd /usr/local/mysql/ echo &quot;新建数据库data目录&quot; mkdir data echo &quot;初始化mysql&quot; cd /usr/local/mysql/ bin/mysqld --initialize --user=root --basedir=/usr/local/mysql --datadir=/usr/local/mysql/data echo &quot;修改配置文件&quot; cat /dev/null &gt; /etc/my.cnf if [ -f &quot;/etc/my.cnf&quot; ]; then mv /etc/my.cnf /etc/my.cnf.bak fi echo &#x27;[mysqld]&#x27; &gt;&gt; /etc/my.cnf echo &#x27;bind-address=0.0.0.0&#x27; &gt;&gt; /etc/my.cnf echo &#x27;basedir = /usr/local/mysql&#x27; &gt;&gt; /etc/my.cnf echo &#x27;datadir = /usr/local/mysql/data&#x27; &gt;&gt; /etc/my.cnf echo &#x27;socket=/tmp/mysql.sock&#x27; &gt;&gt; /etc/my.cnf echo &#x27;user=root&#x27; &gt;&gt; /etc/my.cnf echo &#x27;port=3306&#x27; &gt;&gt; /etc/my.cnf echo &#x27;character-set-server=utf8&#x27; &gt;&gt; /etc/my.cnf #echo &#x27;skip-grant-tables&#x27; &gt;&gt; /etc/my.cnf echo &#x27;# Disabling symbolic-links is recommended to prevent assorted security risks&#x27; &gt;&gt; /etc/my.cnf echo &#x27;symbolic-links=0&#x27; &gt;&gt; /etc/my.cnf echo &#x27;# skip-grant-tables&#x27; &gt;&gt; /etc/my.cnf echo &#x27;[mysqld_safe]&#x27; &gt;&gt; /etc/my.cnf echo &#x27;log-error=/var/log/mysqld.log&#x27; &gt;&gt; /etc/my.cnf echo &#x27;pid-file=/var/run/mysqld/mysqld.pid&#x27; &gt;&gt; /etc/my.cnf echo &#x27;!includedir /etc/my.cnf.d&#x27; &gt;&gt; /etc/my.cnf echo &#x27;[client]&#x27; &gt;&gt; /etc/my.cnf echo &#x27;user=root&#x27; &gt;&gt; /etc/my.cnf echo &#x27;password=123456&#x27; &gt;&gt; /etc/my.cnf echo &#x27;port=3306&#x27; &gt;&gt; /etc/my.cnf echo &quot;配置修改完成，将mysql加入服务&quot; cp /usr/local/mysql/support-files/mysql.server /etc/init.d/mysqld #chmod +x /etc/init.d/mysqld echo &quot;添加mysql指令&quot; ln -s /usr/local/mysql/bin/mysql /usr/local/bin ln -s /usr/local/mysql/bin/mysqladmin /usr/local/bin #echo &quot;服务启动&quot; sudo service mysqld start sudo systemctl restart mysqld systemctl status mysqld 1、 修改用户密码 mysql&gt; alter user &#x27;root&#x27;@&#x27;localhost&#x27; identified by &#x27;root&#x27;; 刷新权限 mysql&gt; flush privileges; 2、远程登录 mysql&gt; update user set host = &#x27;%&#x27; where user = &#x27;root&#x27;; mysql&gt; grant all privileges on *.* to root@&#x27;%&#x27; identified by &#x27;root&#x27;; 刷新权限 mysql&gt; flush privileges; 3、查找并删除mysql有关的文件 find / -name mysql rm -rf 上边查找到的路径，多个路径用空格隔开 #或者下边一条命令即可 find / -name mysql|xargs rm -rf","categories":[],"tags":[{"name":"Centos7","slug":"Centos7","permalink":"http://yoursite.com/tags/Centos7/"},{"name":"MySQL","slug":"MySQL","permalink":"http://yoursite.com/tags/MySQL/"}]},{"title":"Nginx安装","slug":"Nginx安装","date":"2020-08-10T07:32:00.000Z","updated":"2020-09-22T09:22:01.246Z","comments":true,"path":"2020/08/10/Nginx安装/","link":"","permalink":"http://yoursite.com/2020/08/10/Nginx%E5%AE%89%E8%A3%85/","excerpt":"","text":"安装依赖1 gcc 安装 yum install -y gcc gcc-c++ 2 PCRE pcre-devel 安装 yum install -y pcre pcre-devel 3 zlib 安装 yum install -y zlib zlib-devel 4 OpenSSL 安装 yum install -y openssl openssl-devel 脚本#!/bin/bash #安装目录 data=&quot;usr/local&quot; #压缩包目录 default=&quot;home/mirror/nginx&quot; #安装依赖 #1 gcc 安装 yum install -y gcc gcc-c++ #2 PCRE pcre-devel 安装 yum install -y pcre pcre-devel #3 zlib 安装 yum install -y zlib zlib-devel #4 OpenSSL 安装 yum install -y openssl openssl-devel ## 解压 tar -xvf ./nginx-1.19.1.tar.gz -C /$&#123;data&#125;/ mv /$&#123;data&#125;/nginx-1.19.1 /$&#123;data&#125;/nginx ##进入nginx目录 cd /$&#123;data&#125;/nginx ## 配置 ./configure --prefix=/usr/local/nginx # make make make install rm -rf logs mkdir logs chmod 700 logs # cd到刚才配置的安装目录/usr/loca/nginx/ cd /usr/local/nginx ./sbin/nginx -t #在文件的最后一行加入文件引入 cd conf sed -i &#x27;$d&#x27; nginx.conf echo &#x27;include /&#x27;$&#123;default&#125;&#x27;/default.conf;&#x27; &gt;&gt; nginx.conf echo &#x27;&#125;&#x27; &gt;&gt; nginx.conf firewall-cmd --zone=public --add-port=80/tcp --permanent systemctl restart firewalld.service default.conf upstream /backApi &#123; server 127.0.0.1:9100; &#125; server &#123; listen 80 default_server; server_name www.xxxx.com; index index.html; location / &#123; alias /root; index index.html index.htm; &#125; location /api &#123; rewrite ^/api/(.*)$ /$1 break; proxy_pass http://backApi; proxy_set_header Host $host:$server_port; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header Proxy-Client-IP $remote_addr; &#125; &#125; server &#123; listen 8888 server_name www.xxxx.com; location /wqe/ &#123; alais /home/xxxx &#125; &#125;","categories":[],"tags":[{"name":"Centos7","slug":"Centos7","permalink":"http://yoursite.com/tags/Centos7/"},{"name":"Nginx","slug":"Nginx","permalink":"http://yoursite.com/tags/Nginx/"}]},{"title":"VMware Workstation 15 Pro 密钥","slug":"VMware Workstation 15 Pro 密钥","date":"2020-08-10T07:32:00.000Z","updated":"2020-08-10T07:53:07.967Z","comments":true,"path":"2020/08/10/VMware Workstation 15 Pro 密钥/","link":"","permalink":"http://yoursite.com/2020/08/10/VMware%20Workstation%2015%20Pro%20%E5%AF%86%E9%92%A5/","excerpt":"","text":"VMware Workstation 15 Pro 密钥UG5J2-0ME12-M89WY-NPWXX-WQH88 GA590-86Y05-4806Y-X4PEE-ZV8E0 YA18K-0WY8P-H85DY-L4NZG-X7RAD UA5DR-2ZD4H-089FY-6YQ5T-YPRX6 B806Y-86Y05-GA590-X4PEE-ZV8E0 ZF582-0NW5N-H8D2P-0XZEE-Z22VA","categories":[],"tags":[{"name":"VMware Workstation","slug":"VMware-Workstation","permalink":"http://yoursite.com/tags/VMware-Workstation/"}]},{"title":"Vue代理","slug":"Vue相关","date":"2020-08-10T07:32:00.000Z","updated":"2020-08-10T07:53:30.122Z","comments":true,"path":"2020/08/10/Vue相关/","link":"","permalink":"http://yoursite.com/2020/08/10/Vue%E7%9B%B8%E5%85%B3/","excerpt":"","text":"资源路径代理（图片等）修改index.jsproxyTable: &#123; &quot;/resources&quot;: &#123; target: &quot;http://localhost:9100/&quot;, //这里填写后端存放资源文件的域名 ws: true, changeOrigin: true, 是否跨域 // 如果接口中是没有api的，那就直接置空（如上）。如果接口中有api，就需要写成&#123;‘^/api’:‘/api’&#125; pathRewrite: &#123; &quot;/api&quot;: &quot;/&quot; &#125; &#125;,","categories":[],"tags":[{"name":"Vue","slug":"Vue","permalink":"http://yoursite.com/tags/Vue/"}]},{"title":"VMWare Centos7 NAT模式","slug":"虚拟机NAT模式","date":"2020-08-10T07:32:00.000Z","updated":"2020-09-27T09:50:17.167Z","comments":true,"path":"2020/08/10/虚拟机NAT模式/","link":"","permalink":"http://yoursite.com/2020/08/10/%E8%99%9A%E6%8B%9F%E6%9C%BANAT%E6%A8%A1%E5%BC%8F/","excerpt":"","text":"1、VMware设置点击 编辑 -&gt; 虚拟网络编辑器 -&gt; 更改设置 选择 NAT模式，具体勾选如下： 打开 NAT设置，记录子网掩码，网关ip 记录网段信息 2、登录虚拟机root用户登录虚拟机，输入以命令，编辑保存 vi /etc/sysconfig/network-scripts/ifcfg-ens33 ONBOOT=yes IPADDR=192.168.186.130 METMASK=255.255.255.0 GATEWAY=192.168.186.2 DNS=8.8.8.8 输入一下命令，重启network systemctl restart network 3、验证 输入以下命令，查看结果 ping www.baidu.com","categories":[],"tags":[{"name":"Centos7","slug":"Centos7","permalink":"http://yoursite.com/tags/Centos7/"},{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"}]},{"title":"Node","slug":"Node","date":"2020-08-10T07:32:00.000Z","updated":"2020-08-31T02:25:35.496Z","comments":true,"path":"2020/08/10/Node/","link":"","permalink":"http://yoursite.com/2020/08/10/Node/","excerpt":"","text":"换源持久使用 npm config set registry https://registry.npm.taobao.org 配置后可通过下面方式来验证是否成功 npm config get registry","categories":[],"tags":[{"name":"Node","slug":"Node","permalink":"http://yoursite.com/tags/Node/"}]},{"title":"SELinux","slug":"SELinux","date":"2020-08-10T07:32:00.000Z","updated":"2020-09-07T09:43:32.756Z","comments":true,"path":"2020/08/10/SELinux/","link":"","permalink":"http://yoursite.com/2020/08/10/SELinux/","excerpt":"","text":"SELinux查看SELinux状态： 1、/usr/sbin/sestatus -v ##如果SELinux status参数为enabled即为开启状态 SELinux status: enabled 2、getenforce ##也可以用这个命令检查 关闭SELinux： 1、临时关闭（不用重启机器）： setenforce 0 ##设置SELinux 成为permissive模式 √ setenforce 1 ##设置SELinux 成为enforcing模式 2、修改配置文件需要重启机器： 修改/etc/selinux/config 文件 将SELINUX=enforcing改为SELINUX=disabled 重启机器即可","categories":[],"tags":[{"name":"Centos7","slug":"Centos7","permalink":"http://yoursite.com/tags/Centos7/"},{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"}]},{"title":"Consul","slug":"Consul","date":"2020-08-10T07:32:00.000Z","updated":"2020-09-08T02:51:18.339Z","comments":true,"path":"2020/08/10/Consul/","link":"","permalink":"http://yoursite.com/2020/08/10/Consul/","excerpt":"","text":"安装1.下载 wget https://releases.hashicorp.com/consul/1.8.3/consul_1.8.3_linux_amd64.zip curl https://releases.hashicorp.com/consul/1.8.3/consul_1.8.3_linux_amd64.zip &gt; consul.zip ps:下载过慢请试着直接浏览器下载，再用FTP工具上传至服务器 2.解压 1.安装unzip yum -y install zip unzip 2.解压 unzip consul.zip ui界面启动./consul agent -dev -client 0.0.0.0 -ui 访问 IP:8500 记得开端口，或者把防火墙关闭","categories":[],"tags":[{"name":"Centos7","slug":"Centos7","permalink":"http://yoursite.com/tags/Centos7/"},{"name":"Consul","slug":"Consul","permalink":"http://yoursite.com/tags/Consul/"}]},{"title":"httpd","slug":"httpd","date":"2020-08-10T07:32:00.000Z","updated":"2020-09-16T08:47:32.088Z","comments":true,"path":"2020/08/10/httpd/","link":"","permalink":"http://yoursite.com/2020/08/10/httpd/","excerpt":"","text":"安装yum -y install httpd.x86_64 配置文件(位置：/etc/httpd/conf/httpd.conf)Listen 80 Listen 192.168.31.30:8080 &lt;virtualhost 192.168.31.30:8080&gt; Documentroot /home/diskdata/ftp/minioData &lt;Directory &quot;/home/diskdata/ftp/minioData&quot;&gt; Options FollowSymLinks AllowOverride none Require all granted &lt;/Directory&gt; &lt;/virtualhost&gt; 第一、启动、终止、重启systemctl start httpd.service #启动 systemctl stop httpd.service #停止 systemctl restart httpd.service #重启 第二、设置开机启动/关闭systemctl enable httpd.service #开机启动 systemctl disable httpd.service #开机不启动 第三、检查httpd状态systemctl status httpd.service 解决启动Apache遇到的问题Permission denied: AH00072: make_sock: could not bind to address 0.0.0.0:88881.可能原因：SELinux限制了Apache的端口设置 2.关闭SELinux setenforce 0 ##设置SELinux 成为permissive模式 √ 3. //安装semanage yum provides /usr/sbin/semanage yum -y install policycoreutils-python //查看默认允许的端口 semanage port -l | grep -w http_port_t // http_port_t tcp 80, 81, 443, 488, 8008, 8009, 8443, 9000 //使用semanage添加apache侦听的端口 semanage port -a -t http_port_t -p tcp 8888 //启动apache systemctl start httpd","categories":[],"tags":[{"name":"Centos7","slug":"Centos7","permalink":"http://yoursite.com/tags/Centos7/"},{"name":"httpd","slug":"httpd","permalink":"http://yoursite.com/tags/httpd/"}]},{"title":"CentOS 7中添加一个新用户并授权","slug":"Centos7添加用户","date":"2020-08-10T07:32:00.000Z","updated":"2020-09-11T06:09:03.286Z","comments":true,"path":"2020/08/10/Centos7添加用户/","link":"","permalink":"http://yoursite.com/2020/08/10/Centos7%E6%B7%BB%E5%8A%A0%E7%94%A8%E6%88%B7/","excerpt":"","text":"CentOS 7中添加一个新用户并授权创建新用户创建一个用户名为：linuxidc [root@localhost ~]# adduser linuxidc 为这个用户初始化密码，linux会判断密码复杂度，不过可以强行忽略： [root@localhost ~]# passwd linuxidc 更改用户 zhangbiao 的密码 。 新的 密码： 无效的密码： 密码未通过字典检查 - 过于简单化/系统化 重新输入新的 密码： passwd：所有的身份验证令牌已经成功更新。 授权个人用户的权限只可以在本home下有完整权限，其他目录要看别人授权。而经常需要root用户的权限，这时候sudo可以化身为root来操作。我记得我曾经sudo创建了文件，然后发现自己并没有读写权限，因为查看权限是root创建的。 新创建的用户并不能使用sudo命令，需要给他添加授权。 sudo命令的授权管理是在sudoers文件里的。可以看看sudoers： [root@localhost ~]# sudoers bash: sudoers: 未找到命令... [root@localhost ~]# whereis sudoers sudoers: /etc/sudoers /etc/sudoers.d /usr/libexec/sudoers.so /usr/share/man/man5/sudoers.5.gz 找到这个文件位置之后再查看权限： [root@localhost ~]# ls -l /etc/sudoers -r--r----- 1 root root 4251 9月 25 15:08 /etc/sudoers 是的，只有只读的权限，如果想要修改的话，需要先添加w权限： [root@localhost ~]# chmod -v u+w /etc/sudoers mode of &quot;/etc/sudoers&quot; changed from 0440 (r--r-----) to 0640 (rw-r-----) 然后就可以添加内容了，在下面的一行下追加新增的用户： [root@localhost ~]# vim /etc/sudoers ## Allow root to run any commands anywher root ALL=(ALL) ALL linuxidc ALL=(ALL) ALL #这个是新增的用户 wq保存退出，这时候要记得将写权限收回： [root@localhost ~]# chmod -v u-w /etc/sudoers mode of &quot;/etc/sudoers&quot; changed from 0640 (rw-r-----) to 0440 (r--r-----) 这时候使用新用户登录，使用sudo： [linuxidc@localhost ~]$ sudo cat /etc/passwd [sudo] password for linuxidc: We trust you have received the usual lecture from the local System Administrator. It usually boils down to these three things: #1) Respect the privacy of others. #2) Think before you type. #3) With great power comes great responsibility. 第一次使用会提示你，你已经化身超人，身负责任。而且需要输入密码才可以下一步。如果不想需要输入密码怎么办，将最后一个ALL修改成NOPASSWD: ALL。","categories":[],"tags":[{"name":"Centos7","slug":"Centos7","permalink":"http://yoursite.com/tags/Centos7/"}]},{"title":"Centos7安装Node+Npm","slug":"Centos7安装Node+Npm","date":"2020-08-10T07:32:00.000Z","updated":"2020-09-22T07:41:52.565Z","comments":true,"path":"2020/08/10/Centos7安装Node+Npm/","link":"","permalink":"http://yoursite.com/2020/08/10/Centos7%E5%AE%89%E8%A3%85Node+Npm/","excerpt":"","text":"Centos7安装Node+Npm node官网下载node（**Linux Binaries (x64)**）安装包 https://nodejs.org/zh-cn/download/ 执行解压操作 tar -xvf node-v10.16.3-linux-x64.tar.xz 确认一下nodejs下bin目录是否有node 和npm文件,如果有执行软连接，如果没有重新下载 建立软连接，变为全局,对应自己路径 ln -s /usr/local/src/node-v10.16.3-linux-x64/bin/npm /usr/local/bin/(此处不改) ln -s /usr/local/src/node-v10.16.3-linux-x64/bin/node /usr/local/bin/ 验证node是否生效 npm -v node -v npm换源npm config set registry https://registry.npm.taobao.org // 配置后可通过下面方式来验证是否成功 npm config get registry","categories":[],"tags":[{"name":"Centos7","slug":"Centos7","permalink":"http://yoursite.com/tags/Centos7/"},{"name":"node","slug":"node","permalink":"http://yoursite.com/tags/node/"},{"name":"npm","slug":"npm","permalink":"http://yoursite.com/tags/npm/"}]},{"title":"Hello World","slug":"hello-world","date":"2020-08-07T08:51:47.528Z","updated":"2020-08-07T11:03:38.360Z","comments":true,"path":"2020/08/07/hello-world/","link":"","permalink":"http://yoursite.com/2020/08/07/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post$ hexo new &quot;My New Post&quot; More info: Writing Run server$ hexo server More info: Server Generate static files$ hexo generate More info: Generating Deploy to remote sites$ hexo deploy More info: Deployment","categories":[{"name":"Test","slug":"Test","permalink":"http://yoursite.com/categories/Test/"}],"tags":[{"name":"Test","slug":"Test","permalink":"http://yoursite.com/tags/Test/"}]}],"categories":[{"name":"Test","slug":"Test","permalink":"http://yoursite.com/categories/Test/"}],"tags":[{"name":"Centos7","slug":"Centos7","permalink":"http://yoursite.com/tags/Centos7/"},{"name":"Rabbit","slug":"Rabbit","permalink":"http://yoursite.com/tags/Rabbit/"},{"name":"消息队列","slug":"消息队列","permalink":"http://yoursite.com/tags/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/"},{"name":"JDK","slug":"JDK","permalink":"http://yoursite.com/tags/JDK/"},{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"},{"name":"ftp","slug":"ftp","permalink":"http://yoursite.com/tags/ftp/"},{"name":"linux","slug":"linux","permalink":"http://yoursite.com/tags/linux/"},{"name":"mongo","slug":"mongo","permalink":"http://yoursite.com/tags/mongo/"},{"name":"mongodb","slug":"mongodb","permalink":"http://yoursite.com/tags/mongodb/"},{"name":"Navicat","slug":"Navicat","permalink":"http://yoursite.com/tags/Navicat/"},{"name":"MySQL","slug":"MySQL","permalink":"http://yoursite.com/tags/MySQL/"},{"name":"Nginx","slug":"Nginx","permalink":"http://yoursite.com/tags/Nginx/"},{"name":"VMware Workstation","slug":"VMware-Workstation","permalink":"http://yoursite.com/tags/VMware-Workstation/"},{"name":"Vue","slug":"Vue","permalink":"http://yoursite.com/tags/Vue/"},{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"Node","slug":"Node","permalink":"http://yoursite.com/tags/Node/"},{"name":"Consul","slug":"Consul","permalink":"http://yoursite.com/tags/Consul/"},{"name":"httpd","slug":"httpd","permalink":"http://yoursite.com/tags/httpd/"},{"name":"node","slug":"node","permalink":"http://yoursite.com/tags/node/"},{"name":"npm","slug":"npm","permalink":"http://yoursite.com/tags/npm/"},{"name":"Test","slug":"Test","permalink":"http://yoursite.com/tags/Test/"}]}